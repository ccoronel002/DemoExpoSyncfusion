@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="button-section">
            <div id="button-control">
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("primarybtn").Content("Primary").IsPrimary(true).Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("normalbtn").Content("Normal").Render()
                        </div>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("outlinebtn").Content("Outline").IsPrimary(true).CssClass("e-outline").Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("flatbtn").Content("Flat").IsPrimary(true).CssClass("e-flat").Render()
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("successbtn").Content("Success").CssClass("e-success").Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("warningbtn").Content("Warning").CssClass("e-warning").Render()
                        </div>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("dangerbtn").Content("Danger").CssClass("e-danger").Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("infobtn").Content("Info").CssClass("e-info").Render()
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("roundbtn").IconCss("e-icons e-add-icon").CssClass("e-small e-round").IsPrimary(true).Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("togglebtn").Content("Play").IconCss("e-icons e-play-icon").CssClass("e-flat").IsPrimary(true).IsToggle(true).Render()
                        </div>
                    </div>
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("openiconbtn").Content("Open").CssClass("e-flat").IsPrimary(true).IconCss("e-icons e-open-icon").IconPosition(Syncfusion.EJ2.Buttons.IconPosition.Right).Render()
                        </div>
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            @Html.EJS().Button("smallbtn").Content("Small").CssClass("e-small").Render()
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the default functionalities of the Button with different types and predefined styles.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Button is a graphical user interface element that triggers an event on click action. It contains the text, an image, or both.
        </p>
        <p>
            In this sample, Play button is a toggle button and it can be enabled by using the <code>
                <a target="_blank" class="code"
                   href="http://ej2.syncfusion.com/documentation/button/api-button.html#istoggle-boolean">
                    isToggle
                </a>
            </code> property. To change the text and icon you should handle click event.
        </p>
        <p>
            More information about Button can be found in this
            <a target="_blank"
               href="http://ej2.syncfusion.com/documentation/button/getting-started.html">
                documentation section
            </a>.
        </p>
    </div>
}

@section Scripts {
    <script>
        document.getElementById("togglebtn").addEventListener('click', function () {
            var toggleBtn = document.getElementById("togglebtn").ej2_instances[0];
            if (toggleBtn.element.classList.contains('e-active')) {
                toggleBtn.content = 'Pause';
                toggleBtn.iconCss = 'e-icons e-pause-icon';
            } else {
                toggleBtn.content = 'Play';
                toggleBtn.iconCss = 'e-icons e-play-icon';
            }
        });
    </script>
}

<style>
    #button-control {
        width: 100%;
        margin: 8% 0;
        text-align: center;
    }

    @@media only screen and (max-width: 500px) {
        #button-control {
            margin-left: -3%;
        }
    }

    .button-section {
        width: 80%;
        margin: auto;
    }

    #button-control .col-xs-12 {
        margin: 15px 0;
    }


    .e-play-icon::before {
        content: '\e798';
    }

    .e-pause-icon::before {
        content: '\e753';
    }

    .e-open-icon::before {
        content: '\e782';
    }

    .e-add-icon::before {
        content: '\e823';
    }
</style>
