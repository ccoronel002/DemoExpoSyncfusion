@using Syncfusion.EJ2;

@section ActionDescription{
    This sample demonstrates how to encrypt and decrypt workbooks using XlsIO.
}

@section Description{
    This sample focuses on the encryption and decryption of an Excel 2007, Excel 2010, Excel 2013 and Excel 2016 workbook using Essential XlsIO.
    <br />
    <br />Encryption is a method of protecting workbook data.It is based on a password that converts the data into a form that cannot be understood; it also restricts anonymous users from accessing a document. Decryption is the process of converting encrypted data back into its original form so that data can be read from the workbook.
    <br />
    <br />A password for encrypting a workbook can be set in Microsoft Excel 2007, Excel 2010 and Excel 2013 through the Office Menu->Prepare->Encrypt Document command.
    <br />
    <br />
    <b>Note:</b> Password protection of a workbook file is different from the workbook structure and window protection you can set in the <b>Review->Protect Workbook</b>
    <br />
    <br />
    <br />
    <b>Features:</b>
    <br />
    <br />
    <ul>
        <li>Encrypting with a password</li>
        <li>Decrypting with a password</li>
    </ul>
    <br />
}
@section ControlsSection{
    <div class="control-section">
        <h5>
            Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please
            note that Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.
        </h5>
        <br />
        <h5>  Save As :</h5>
        <div class="celldiv">
            <table>
                <tr>
                    <td>
                        @Html.EJS().RadioButton("radio1").Label("XLS").Name("select").Value("xls").Checked(false).Render()
                    </td>
                    <td>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    </td>
                    <td>
                        @Html.EJS().RadioButton("radio2").Label("XLSX").Name("select").Value("xlsx").Checked(true).Render()
                    </td>
                </tr>
            </table>
        </div>
        <br />
        <div class="celldiv">
            @Html.EJS().Button("encryptbtn").Content("Encrypt Document").Render()
            @Html.EJS().Button("decryptbtn").Content("Decrypt Document").Render()
        </div>
    </div>
    <script>
    document.getElementById('encryptbtn').onclick = function () {
        if (document.getElementById('radio1').checked == true)
            location.href = '@Html.Raw(@Url.Action("EncryptAndDecrypt", new { button= "Encrypt Document", SaveOption = "Xls" }))';
        else
            location.href = '@Html.Raw(@Url.Action("EncryptAndDecrypt", new { button = "Encrypt Document", SaveOption = "xlsx" }))';
    };
    document.getElementById('decryptbtn').onclick = function () {
        if (document.getElementById('radio1').checked == true)
            location.href = '@Html.Raw(@Url.Action("EncryptAndDecrypt", new { button = "Decrypt Document", SaveOption = "Xls" }))';
        else
            location.href = '@Html.Raw(@Url.Action("EncryptAndDecrypt", new { button = "Decrypt Document", SaveOption = "xlsx" }))';
        };
    </script>
}
