

@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@{
    List<object> markerData = new List<object>();
    markerData.Add(new { longitude = 116.5703749, latitude = 40.4319077, name = "The Great Wall of China, China" });
    markerData.Add(new { longitude = 35.4443622, latitude = 30.3284544, name = "Petra, Jorden" });
    markerData.Add(new { longitude = 78.0421552, latitude = 27.1750151, name = "Taj Mahal, Agra, India" });
    markerData.Add(new { longitude = 12.4922309, latitude = 41.8902102, name = "The Roman Colosseum, Rome, Italy" });
    markerData.Add(new { longitude = -88.5677826, latitude = 20.6842849, name = "The Chichen Itza, Mexico" });
    markerData.Add(new { longitude = -72.5449629, latitude = -13.1631412, name = "Machu Picchu, Peru" });
    markerData.Add(new { longitude = -43.2104872, latitude = -22.951916, name = "Christ Redeemer, Rio de janeiro, Brazil" });

}
@section ControlsSection{
    <style>
        #button-control {
            width: 100%;
            text-align: center;
        }

        #control-container {
            padding: 0px !important;
        }

        .e-play-icon::before {
            content: '\e728';
        }
         #container {
            display: table;
            margin: 0 auto;
        }
    </style>

    <div class="col-lg-9 control-section">
        <div id="outer" style="width:100%">
            <div class="content-wrapper">
                @Html.EJS().Maps("container").Load("loadMaps").TitleSettings(title => title.Text("Location of the Wonders in the World").TextStyle(new MapsFont{ Size = "16px", Opacity = 1 })).LegendSettings(legend => legend.Visible(true)).ZoomSettings(zoom => zoom.Enable(false)).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>{
       new Syncfusion.EJ2.Maps.MapsLayer
       {
           ShapeData = ViewBag.ShapeData,
          
           MarkerSettings = new List<Syncfusion.EJ2.Maps.MapsMarker>
           {
               new Syncfusion.EJ2.Maps.MapsMarker
               {
                   Visible = true, Height = 20,Width = 15,Shape = Syncfusion.EJ2.Maps.MarkerType.Balloon,
                   Fill = "#E13E40", AnimationDuration = 0, DataSource = markerData,
                   TooltipSettings = new MapsTooltipSettings{ Visible = true, ValuePath = "name" }

               },

           }
        }}
   ).Render()
                <div style="margin-left:75%">
                    Source:
                    <a href="http://www.emapsworld.com/world-seven-wonder-map.html" target="_blank">en.wikipedia.org</a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 20%">
                    <div>
                        Export Type:
                    </div>
                </td>
                <td style="width: 80%;">
                    <div style="margin-left: -20px">
                        @Html.EJS().DropDownList("Export").Index(0).Width("80px").DataSource(ViewBag.format).Value("JPEG").Change("valueChange").Render()
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 40%">
                    <div>File Name:</div>
                </td>
                <td style="width: 40%;">
                    <div class="e-float-input" style='margin-top: 0px;'>
                        <input type="text" value="Maps" id="fileName" style="margin-left: -20px">
                    </div>
                </td>
            </tr>
            <tr id="button-control" style="height: 50px" align='center'>
                <td>
                    <div>
                        @Html.EJS().Button("togglebtn").IconCss("e-icons e-play-icon").Content("Export").CssClass("e-flat").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <script>
        var maps;
        function loadMaps(args) {
            args.maps.layers[0].shapeSettings = { fill: 'lightgrey', border: { color: 'black', width: 0.1 } };
            var theme = location.hash.split('/')[1];
            theme = theme ? theme : 'Material';
            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));            
            args.maps.layers[0].markerSettings[0].animationDuration = 0;
            maps = args.maps;
        }
        var mode = "JPEG";
        function valueChange() {
            var exportType = document.getElementById('Export').ej2_instances[0];
            mode = exportType.value;
        }
        document.getElementById('togglebtn').onclick = function () {
            var map = document.getElementById('container').ej2_instances[0];
            var fileName = (document.getElementById('fileName')).value;
            maps.export(mode, fileName);
        };
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the exporting feature in Maps. By clickingÂ the Export button, you can export the map in PNG, JPEG, SVG or in PDF formats.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure the export. The rendered map can be exported as either JPEG, PNG, SVG and PDF formats. It can be achieved using Blob and it is supported only in modern browsers. Also this sample visualizes the locations of the wonders in the world using markers.
        </p>
        <p>
            Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over a marker or tap a marker in touch enabled devices.
        </p>
        <br />
        <p style="font-weight: 500">Injecting Module</p>
        <p>
            Maps component features are segregated into individual feature-wise modules. To use a marker, inject the <code>Marker</code> module using the <code>Maps.Inject(Marker)</code> method.
        </p>

    </div>
}





