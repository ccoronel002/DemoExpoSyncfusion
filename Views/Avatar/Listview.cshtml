@using Syncfusion.EJ2
@using Syncfusion.EJ2.Lists

@section ControlsSection{
    <div class="col-lg-12 control-section">

        <div class="sample_container">
            <!-- Listview element -->
            @{ var template = "<div class='listWrapper'>" +
                "${if(avatar!=='')}" +
                "<span class='e-avatar e-avatar-small e-avatar-circle'>${avatar}</span>" +
                "${else}" +
                "<span class='${pic} e-avatar e-avatar-small e-avatar-circle'> </span>" +
                "${/if}" +
                "<span class='list-text'>" +
                "${text} </span> </div>";}
            @Html.EJS().ListView("letterAvatarList").Enable(true).DataSource((IEnumerable<object>)ViewBag.dataSource).HeaderTitle("Contacts").ShowHeader(true).Template(template).SortOrder(SortOrder.Ascending).Render()
        </div>
    </div>
}

@section ActionDescription{
    <p>This sample demonstrates the integration of avatar component in to listview to create contacts applications.</p>
}

@section Description{
    <p>
        The avatar can be used with the other component to create various application. Here the avatar is used to display images or their initials of the persons the contact lists.
    </p>
    <p>Here the xsmall avatar is used in circle type. To change the size of the avatar to xsmall and circle style add <code>.e-avatar-xsmall</code> and <code>.e-avatar-circle</code></p>
}

<style>
    .control-section {
        overflow: auto;
    }

    /* Listview Customization */

    #letterAvatarList {
        max-width: 350px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

        #letterAvatarList .listWrapper {
            width: inherit;
            height: inherit;
            position: relative;
        }

        #letterAvatarList .e-list-header {
            height: 54px;
        }

    .material #letterAvatarList .e-list-header .e-text {
        line-height: 22px;
    }

    .fabric #letterAvatarList .e-list-header .e-text {
        line-height: 22px;
    }

    .bootstrap #letterAvatarList .e-list-header .e-text {
        line-height: 13px;
    }

    .highcontrast #letterAvatarList .e-list-header .e-text {
        line-height: 20px;
    }

    #letterAvatarList .e-list-item {
        cursor: pointer;
        height: 50px;
        line-height: 44px;
        border: 0;
    }

    /* Badge Positioning */

    #letterAvatarList .e-badge {
        margin-top: 12px;
    }

    #letterAvatarList .listWrapper .list-text {
        width: 60%;
        display: inline-block;
        vertical-align: middle;
        margin: 0 50px;
    }

    /* Avatar Positioning */

    #letterAvatarList .listWrapper .e-avatar {
        position: absolute;
        top: calc(100% - 40px);
        font-size: 10px;
        left: 5px;
    }

    /* Avatar Background Customization */

    #letterAvatarList .e-list-item:nth-child(1) .e-avatar {
        background-color: #039BE5;
    }

    #letterAvatarList .e-list-item:nth-child(3) .e-avatar {
        background-color: #E91E63;
    }

    #letterAvatarList .e-list-item:nth-child(5) .e-avatar {
        background-color: #009688;
    }

    /* Avatar images using 'background-image' property */

    .pic01 {
        background-image: url('@Url.Content("~/Content/avatar/images/pic01.png")');
    }

    .pic02 {
        background-image: url('@Url.Content("~/Content/avatar/images/pic02.png")');
    }

    .pic03 {
        background-image: url('@Url.Content("~/Content/avatar/images/pic03.png")');
    }

    .pic04 {
        background-image: url('@Url.Content("~/Content/avatar/images/pic04.png")');
    }
</style>
