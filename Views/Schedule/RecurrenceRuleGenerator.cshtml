@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.Schedule

@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper recurrence-editor-wrap">
            <div style="padding-bottom:15px;">
                <label>Rule Output</label>
                <div class="rule-output-container">
                    <div id="rule-output">FREQ=DAILY;INTERVAL=1;</div>
                </div>
            </div>
            @Html.EJS().RecurrenceEditor("RecurrenceEditor").SelectedType(1).Change("onChange").Render()
        </div>
    </div>
    <style>
        .recurrence-editor-wrap {
            margin: 0 25%;
        }

        .rule-output-container {
            height: auto;
            border: 1px solid #969696;
        }

        #rule-output {
            padding: 8px 4px;
            text-align: center;
            min-height: 20px;
            overflow: hidden;
            overflow-wrap: break-word;
        }

        @@media (max-width: 580px) {
            .recurrence-editor-wrap {
                margin: 0 5%;
            }
        }
    </style>
    <script type="text/javascript">
        function onChange(args) {
            var element = document.querySelector('#rule-output');
            element.innerText = args.value;
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases the recurrence rule generation based on the options selected from the Recurrence editor and it usually
            follows the
            <a href="https://tools.ietf.org/html/rfc5545#section-3.3.10" target="_blank">iCalendar</a> specifications. This generated recurrence rule string is a valid one to be used with the Schedule eventâ€™s
            recurrence rule field.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, a specific rule has been set to the recurrence editor manually by making use of the
            <code>setRecurrenceRule</code> method which will be displayed on the label placed at the top of it. Also, when the user dynamically change the
            options in recurrence editor, the modified rule value as per the selection will be displayed on it which is retrieved
            within the
            <code>Change</code> event.
        </p>
    </div>
}
