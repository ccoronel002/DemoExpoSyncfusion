@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.Schedule

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("550px").Views(ViewBag.view).RenderCell("onRenderCell").EventRendered("onEventRendered").EventSettings(new ScheduleEventSettings { DataSource = ViewBag.datasource }).CssClass("schedule-date-header-template").DateHeaderTemplate("#template").SelectedDate(new DateTime(2018, 2, 15)).Render()
        </div>
    </div>

    <style>
        .schedule-date-header-template.e-schedule .e-vertical-view .e-header-cells {
            padding: 0;
            text-align: center !important;
        }

        .schedule-date-header-template.e-schedule .date-text {
            font-size: 14px;
        }

        .schedule-date-header-template.e-schedule.e-device .date-text {
            font-size: 12px;
        }

        .schedule-date-header-template.e-schedule .weather-image {
            width: 20px;
            height: 20px;
            background-position: center center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .schedule-date-header-template.e-schedule .weather-text {
            font-size: 11px;
        }

        .schedule-date-header-template.e-schedule .e-month-view .weather-image {
            float: right;
            margin: -20px 2px 0 0;
            width: 20px;
            height: 20px;
        }
    </style>
    <script id="template" type="text/template">
        <div class="date-text">${getDateHeaderText(data.date)}</div>
        ${getWeather(data.date)}
    </script>
    <script src="~/Scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        var instance = new ej.base.Internationalization();
        window.getDateHeaderText = function (value) {
            return instance.formatDate(value, { skeleton: 'Ed' });
        };
        function getWeather(value) {
            switch (value.getDay()) {
                case 0:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clear.svg")" /><div class="weather-text">25°C</div>';
                case 1:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")" /><div class="weather-text">18°C</div>';
                case 2:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-rain.svg")" /><div class="weather-text">10°C</div>';
                case 3:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")" /><div class="weather-text">16°C</div>';
                case 4:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-rain.svg")" /><div class="weather-text">8°C</div>';
                case 5:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clear.svg")" /><div class="weather-text">27°C</div>';
                case 6:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")" /><div class="weather-text">17°C</div>';
                default:
                    return null;
            }
        }
        function onRenderCell(args) {
            if (args.elementType === 'monthCells') {
                var ele = document.createElement('div');
                ele.innerHTML = getWeather(args.date);
                (args.element).appendChild(ele.firstChild);
            }
        }

        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo depicts the way to add images and custom text to the date header bar by making use of the date header template
            option.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the
            <code>DateHeaderTemplate</code> option is used to customize the date header cells of day, week and workweek views. In month view, the date header
            is not applicable and therefore the same customizations can be added beside the date text in the month cells by making
            use of the
            <code>RenderCell</code> event.
        </p>
    </div>
}