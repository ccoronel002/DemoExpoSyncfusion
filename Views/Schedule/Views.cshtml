@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.Schedule
@using Syncfusion.EJ2.DropDowns

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("550px").Views(ViewBag.view).EventRendered("onEventRendered").EventSettings(new ScheduleEventSettings { DataSource = ViewBag.datasource }).SelectedDate(new DateTime(2018, 2, 15)).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Current View
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("scheduleview").Index(1).DataSource(ViewBag.ddl).Fields(new DropDownListFieldSettings { Text = "Name", Value = "Value" }).Change("onChange").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script src="~/Scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.currentView = args.value;
            scheduleObj.dataBind();
        }

        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases the usage of basic views available in Schedule such as Day, Week, Work Week, Month and Agenda. Here, the wildlife
            events being held in zoos are displayed against its respective timings.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, Schedule is showcased with 5 basic views namely
        </p>
        <ul>
            <li>Day</li>
            <li>Week</li>
            <li>Work Week</li>
            <li>Month</li>
            <li>Agenda</li>
        </ul>
        <p>
            The user can navigate between different view options available on the header section just by clicking on it. From any of
            the views, the user can switch back to the day view by clicking dates in the date header section. These view options
            to be displayed on the Schedule header bar is based on the values ['Day', 'Week', 'WorkWeek', 'Month', 'Agenda'] assigned to
            the
            <code>Views</code> property.
        </p>
    </div>
}