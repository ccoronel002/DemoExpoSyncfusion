@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.Schedule
@using Syncfusion.EJ2.DropDowns;

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().Schedule("schedule").Width("100%").Height("550px").Views(ViewBag.view).EventRendered("onEventRendered").EventSettings(new ScheduleEventSettings { DataSource = ViewBag.datasource }).ShowWeekend(false).SelectedDate(new DateTime(2018, 2, 15)).Render()
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr>
                    <td style="width: 30%">
                        <div>
                            Work days
                        </div>
                    </td>
                    <td style="width: 70%">
                        <div>
                            @Html.EJS().MultiSelect("workdayscheckbox").Mode(VisualMode.CheckBox).PopupWidth("180").ShowDropDownIcon(true).ShowClearButton(false).Value(ViewBag.values).DataSource(
                            ViewBag.dropdown).Fields(new MultiSelectFieldSettings { Text = "DayText", Value = "DayValue" }).Change("onDayChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 30%">
                        <div>
                            Weekend days
                        </div>
                    </td>
                    <td style="width: 70%">
                        <div>
                            @Html.EJS().Button("showweekendbtn").Content("Show").IsToggle(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script src="~/Scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onDayChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var value = args.value.slice(0).map(Number).sort();
            scheduleObj.workDays = value.length === 0 ? [0] : value;
            scheduleObj.dataBind();
        }
        document.getElementById('showweekendbtn').onclick = function () {
            var toggleBtn = document.getElementById('showweekendbtn').ej2_instances[0];
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            if (toggleBtn.element.classList.contains('e-active')) {
                toggleBtn.content = 'Hide';
                scheduleObj.showWeekend = true;
            } else {
                toggleBtn.content = 'Show';
                scheduleObj.showWeekend = false;
            }
        }
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo depicts the way to show or hide the weekend days of a week on Schedule. The days whichever not specified in
            working days collections will be taken into consideration as weekend days.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, the
            <code>ShowWeekend</code> property is used either to show or hide the weekend days of a week and it is not applicable on
            <code>Workweek</code> view. By default, it is set to
            <code>true</code>. The days which are not a part of the working days collection of a Schedule are usually considered as weekend days
            here.
        </p>
        <p>
            Here, the working days are defined as
            <code>[1, 3, 4, 5]</code> on Schedule. Therefore, the remaining days (0, 2, 6 â€“ Sunday, Tuesday and Saturday) are considered as weekend days
            and will be hidden from the views as the
            <code>ShowWeekend</code> property is set to false.
        </p>
    </div>
}