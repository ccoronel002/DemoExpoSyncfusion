@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{
    <div class="col-md-8 control-section">
        <div class="content-wrapper">
            @Html.EJS().CircularGauge("container").Load("onGaugeLoad").AxisLabelRender("onAxesLabelRendering").Axes(axes => axes.Radius("70%")
         .LineStyle(new CircularGaugeLine{ Width = 10, Color = "#E0E0E0" }).LabelStyle(new CircularGaugeLabel
         {
             UseRangeColor = true,
             AutoAngle = true,
             HiddenLabel = HiddenLabel.Last,
             Font = new
             {
                 size = "12px",
                 fontFamily = "Roboto"
             }
         }).MajorTicks(new CircularGaugeTick
         {
             Height = 15,
             Interval = 1,
             Color = "#9E9E9E"
         }).MinorTicks(new CircularGaugeTick
         {
             Height = 10,
             Interval = 0.5,
             Color = "#9E9E9E"
         }).Pointers(ViewBag.Pointers).Ranges(ViewBag.Ranges).Minimum(0).Maximum(8).Add()).Render()
        </div>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div id="">Pointer Color</div>
                    </td>
                    <td>
                        <div>
                            <select id="poiterColor" class="form-control">
                                <option value="#f03e3e" selected="true">#f03e3e</option>
                                <option value="#4472c4">#4472c4</option>
                                <option value="#ed7d31">#ed7d31</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div id="">Label Color</div>
                    </td>
                    <td>
                        <div>
                            <select id="labelColor" class="form-control">
                                <option value="#f03e3e" selected="true">#f03e3e</option>
                                <option value="#4472c4">#4472c4</option>
                                <option value="#ed7d31">#ed7d31</option>
                            </select>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script type="text/javascript">
        var value = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', ''];
        function onAxesLabelRendering(sender) {
            sender.text = value[sender.value];
        }
        var circulargauge;
        function onGaugeLoad(sender) {
            if (window.gaugeLoaded)
                return;
            window.gaugeLoaded = true;
            sender.gauge.axes[0].pointers[0].animation.enable = false;
            sender.gauge.axes[0].pointers[1].animation.enable = false;
            sender.gauge.axes[0].startAngle = 0;
            sender.gauge.axes[0].endAngle = 360;
            window.setTimeout(function () {
                var gaugeWidth = document.getElementById('container').offsetWidth;
                var svgWidth = document.getElementById('container_svg').offsetWidth;
                if (gaugeWidth != svgWidth)
                    sender.gauge.refresh();
            }, 200);
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            circulargauge = sender.gauge;
        }

        pointerColor = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: 120,
            change: function () {
                var rangeColor = pointerColor.value.toString();
                circulargauge.axes[0].pointers[0].color = rangeColor;
                circulargauge.setPointerValue(0, 0, circulargauge.axes[0].pointers[0].value);
            }
        });
        pointerColor.appendTo('#poiterColor');
        labelColor = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: 120,
            change: function () {
                var rangeColor = labelColor.value.toString();
                circulargauge.axes[0].ranges[0].color = rangeColor;
                circulargauge.refresh();
            }
        });
        labelColor.appendTo('#labelColor');


    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates how to make a direction compass by using the features in gauge.
            Color of the needle and direction labels can be customized by using options.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Circular gauge can be customized as per a user requirement.
            In this example, a direction compass has been depicted by adding <code>needles</code> and by customizing the <code>labels</code> to show the direction.
        </p>
        <p>
            More information on the needle and labels can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation"> documentation section</a>.
        </p>
    </div>
}


