@using Syncfusion.EJ2
@model EJ2MVCSampleBrowser.Controllers.DatePickerModel
@section ControlsSection{

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div class="col-lg-12 control-section">
            <div id="wrapper">
                @Html.EJS().DatePickerFor(model => model.Id, (Syncfusion.EJ2.Calendars.DatePicker)ViewData["date"]).Width("200px").Render()
                <div>
                    @Html.ValidationMessageFor(model => model.Id)
                </div>
                <div id="submitbutton">
                    @Html.EJS().Button("btn").Content("Post").Render()
                </div>
            </div>
        </div>

    }

    <style>
        #wrapper {
            max-width: 246px;
            margin: 30px auto;
            padding-top: 50px;
        }

        #submitbutton {
            margin-top: 20px;
            margin-left: 65px;
        }

        #control-content #wrapper .field-validation-error {
            color: red;
        }
    </style>

}
@section ActionDescription{
    <div id="action-description">
        <p>
            Click the submit button to post the selected value in the DatePicker. When posting the null value, validation error message will be shown below the DatePicker.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the strongly typed extension support in DatePicker. Date value is set to DatePicker from code behind and its set to DatePicker in view page by invoking the strongly typed DatePickerFor helper with the lamba expression.
        </p>
        <p>
            More information on the DatePicker instantiation can be found in the
            <a href="http://ej2.syncfusion.com/documentation/datepicker/" target="_blank"> documentation section</a>.
        </p>
    </div>
}