@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView

@section ControlsSection{

    <div class="col-lg-8 control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DataSource(dataSource => dataSource.Data((IEnumerable<object>
                )ViewBag.Data).ExpandAll(false).EnableSorting(true)
                .FormatSettings(formatsettings =>
                {
                formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
                })
                .Rows(rows =>
                {
                rows.Name("Country").Add();
                rows.Name("Products").Add();
                })
                .Columns(columns =>
                {
                columns.Name("Year").Add();
                columns.Name("Order_Source").Caption("Order Source").Add();
                })
                .Values(values =>
                {
                values.Name("In_Stock").Caption("In Stock").Add();
                values.Name("Sold").Caption("Units Sold").Add();
                values.Name("Amount").Caption("Sold Amount").Add();
                })
                .Filters(filters =>
                {
                filters.Name("Product_Categories").Caption("Product Categories").Add();
                })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).DataBound("onDataBound").Render()
</div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Fields:
                        </div>
                    </td>
                    <td>
                        <div style="margin-left: -40px">
                            <input type="text" tabindex="1" id='fields' />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Members:
                        </div>
                    </td>
                    <td style="padding-bottom: 16px">
                        <div class="valuecls" style="margin-left: -40px">
                            <input type="text" tabindex="1" id='values' />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            Filter Type:
                        </div>
                    </td>
                    <td>
                        <div style="margin-left: -40px;margin-top:-5px">
                            <input type="text" tabindex="1" id='type' />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td></td>
                    <td>
                        <div style="float:right;margin-right: 4px">
                            @Html.EJS().Button("apply-btn").IconCss("e-icons e-play-icon").CssClass("e-flat").Content("Apply").IsPrimary(true).Disabled(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .e-play-icon::before {
            content: '\e728';
        }

        .hdrlabel {
            font-size: 13px;
        }

        .e-bigger .hdrlabel {
            font-size: 14px;
        }
    </style>
    <script>
        var fieldCollections = {};
        var isInitial = true;
        var type = ['Include', 'Exclude'];
        var values = [];
        var fields = ['Country', 'Products', 'Year'];
        var valuesddl = new ej.dropdowns.MultiSelect({
            dataSource: values,
            mode: 'CheckBox',
            showDropDownIcon: true,
            showClearButton: false,
            enableSelectionOrder: false,
            fields: { text: 'Member' },
            select: onSelect,
            removed: onRemoved,
            open: onOpen
        });
        valuesddl.appendTo('#values');
        var fieldsddl = new ej.dropdowns.DropDownList({
            dataSource: fields,
            index: 0,
            width: '98%',
            change: onFieldChange
        });
        fieldsddl.appendTo('#fields');
        var typeddl = new ej.dropdowns.DropDownList({
            dataSource: type,
            width: '98%',
            index: 1
        });
        typeddl.appendTo('#type');
        function onDataBound(args) {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            if (isInitial) {
                var fieldCnt = fields.length - 1;
                while (fieldCnt > -1) {
                    var members = Object.keys(pivotGridObj.engineModule.fieldList[fields[fieldCnt]].members);
                    var memberCnt = members.length - 1;
                    var memberColl = [];
                    while (memberCnt > -1) {
                        memberColl.push({ Member: members[memberCnt], Checked: members[memberCnt] + '_' + false });
                        memberCnt--;
                    }
                    fieldCollections[fields[fieldCnt]] = memberColl;
                    fieldCnt--;
                }
                values = fieldCollections[fields[0]];
                if (document.getElementById('values').ej2_instances) {
                    var valuesddl = document.getElementById('values').ej2_instances[0];
                    valuesddl.dataSource = values;
                    valuesddl.dataBind();
                }
                isInitial = false;
            }
        }
        function onSelect(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            applyBtn.disabled = false;
            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + true);
        }
        function onRemoved(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + false);
            setApplyBtnState();
        }
        function onOpen(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            args.popup.element.querySelector(".e-filter-parent").style.display = 'none';
        }
        function onFieldChange(args) {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            valuesddl.dataSource = fieldCollections[args.value.toString()];
            valuesddl.value = getSelectedMembers(args.value.toString());
            valuesddl.dataBind();
        }
        function getSelectedMembers(field) {
            var membersColl = [];
            var members = fieldCollections[field];
            var memLength = members.length - 1;
            while (memLength > -1) {
                if (members[memLength]['Checked'] === members[memLength]['Member'] + '_' + true) {
                    membersColl.push(members[memLength]['Member'].toString());
                }
                memLength--;
            }
            return membersColl;
        }
        function setMemberCheckedState(field, member, checkedState) {
            var members = fieldCollections[field];
            var memLength = members.length - 1;
            while (memLength > -1) {
                if (members[memLength]['Member'] === member) {
                    members[memLength]['Checked'] = checkedState;
                    break;
                }
                memLength--;
            }
        }
        function setApplyBtnState() {
            var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            var fieldArray = ['Country', 'Products', 'Year'];
            var loopCount = fieldArray.length - 1;
            var isSelected = false;
            while (loopCount > -1) {
                if (getSelectedMembers(fieldArray[loopCount]).length > 0) {
                    isSelected = true;
                    break;
                }
                loopCount--;
            }
            applyBtn.disabled = !isSelected;
        }
        document.getElementById('apply-btn').onclick = function () {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            var typeddl = document.getElementById('type').ej2_instances[0];
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('pivotview').ej2_instances[0];
            //You can set your filter settings here.
            pivotGridObj.dataSource.filterSettings = [
                { name: fields[0], items: getSelectedMembers(fields[0]), type: typeddl.itemData.toLowerCase() },
                { name: fields[1], items: getSelectedMembers(fields[1]), type: typeddl.itemData.toLowerCase() },
                { name: fields[2], items: getSelectedMembers(fields[2]), type: typeddl.itemData.toLowerCase() },
            ];
        }
        document.addEventListener('DOMContentLoaded', function () {
            var valuesddl = document.getElementById('values').ej2_instances[0];
            valuesddl.dataSource = values;
            valuesddl.dataBind();
        });
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample demonstrates ordering of fields either in ascending or descending order.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, any field can be selected from the
            <b>Fields</b> dropdown list and its order can be changed to display headers either in ascending or descending order.
            It can be enabled using the
            <code>enableSorting</code> property and it can be configured using the
            <code>name</code> and
            <code>order</code> options inside the
            <code>sortSettings</code> property in the pivotgrid widget.
        </p>
    </div>
}
