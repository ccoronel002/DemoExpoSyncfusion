@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView

@section ControlsSection{

    <div class="col-lg-8 control-section">
    <div class="content-wrapper">
        @Html.EJS().PivotView("pivotview").Width("100%").Height("300").DataSource(dataSource => dataSource.Data((IEnumerable<object>)ViewBag.Data).ExpandAll(false).EnableSorting(true)
           .FormatSettings(formatsettings =>
           {
               formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
           })
           .Rows(rows =>
           {
               rows.Name("Country").Add();
               rows.Name("Products").Add();
           })
           .Columns(columns =>
           {
               columns.Name("Year").Add();
               columns.Name("Order_Source").Caption("Order Source").Add();
           })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add();
               values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters =>
           {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           })
           ).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).Render()
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div style="margin-left: -10px">
                            @Html.EJS().CheckBox("enablesort").Checked(true).Label("Enable Sorting").Change("onChange").LabelPosition(Syncfusion.EJ2.Buttons.LabelPosition.After).Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div class="hdrlabel">
                            Fields:
                        </div>
                    </td>
                    <td>
                        <div style="margin-left: -20px">
                            <input type="text" tabindex="1" id='fields' />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div class="hdrlabel">
                            Order:
                        </div>
                    </td>
                    <td>
                        <div style="margin-left: -20px">
                            <input type="text" tabindex="1" id='order' />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td></td>
                    <td>
                        <div style="float:right">
                            @Html.EJS().Button("apply-btn").IconCss("e-icons e-play-icon").CssClass("e-flat").Content("Apply").IsPrimary(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .e-play-icon::before {
            content: '\e728';
        }

        .hdrlabel {
            font-size: 13px;
        }

        .e-bigger .hdrlabel {
            font-size: 14px;
        }
    </style>
    <script>
        var order = ['Ascending', 'Descending'];
        var fields = [
            { Field: 'Country', Order: 'Country_asc' },
            { Field: 'Products', Order: 'Products_asc' },
            { Field: 'Year', Order: 'Year_asc' },
            { Field: 'Order Source', Order: 'Order Source_asc' }
        ];
        var fieldsddl = new ej.dropdowns.DropDownList({
            dataSource: fields,
            fields: { text: 'Field', value: 'Order' },
            index: 0,
            enabled: true,
            change: onFieldChange
        });
        fieldsddl.appendTo('#fields');
        var orderddl = new ej.dropdowns.DropDownList({
            dataSource: order,
            index: 0,
            enabled: true,
            change: onOrderChange
        });
        orderddl.appendTo('#order');
        function onChange(args) {
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var orderddl = document.getElementById('order').ej2_instances[0];
			var applyBtn = document.getElementById('apply-btn').ej2_instances[0];
            if (args.checked) {
                fieldsddl.enabled = true;
                orderddl.enabled = true;
				applyBtn.disabled = false;
            }
            else {
                fieldsddl.enabled = false;
                orderddl.enabled = false;
				applyBtn.disabled = true;
            }
        }
        function onFieldChange(args) {
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var orderddl = document.getElementById('order').ej2_instances[0];
            if (fieldsddl.dataSource[fieldsddl.index].Order === fieldsddl.dataSource[fieldsddl.index].Field + '_asc') {
                orderddl.index = 0;
            }
            else {
                orderddl.index = 1;
            }
        }
        function onOrderChange(args) {
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var orderddl = document.getElementById('order').ej2_instances[0];
            if (args.value === 'Ascending') {
                fieldsddl.dataSource[fieldsddl.index].Order = fieldsddl.dataSource[fieldsddl.index].Field + '_asc';
            }
            else {
                fieldsddl.dataSource[fieldsddl.index].Order = fieldsddl.dataSource[fieldsddl.index].Field + '_desc';
            }
            fieldsddl.refresh();
        }
        document.getElementById('apply-btn').onclick = function () {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var fieldsddl = document.getElementById('fields').ej2_instances[0];
            var orderddl = document.getElementById('order').ej2_instances[0];
            var checkBoxObj = document.getElementById('enablesort').ej2_instances[0];
            if (checkBoxObj.checked) {
                pivotGridObj.dataSource.enableSorting = true;
                pivotGridObj.dataSource.sortSettings = [
                    { name: 'Country', order: fieldsddl.dataSource[0].Order === 'Country_asc' ? 'Ascending' : 'Descending' },
                    { name: 'Products', order: fieldsddl.dataSource[1].Order === 'Products_asc' ? 'Ascending' : 'Descending' },
                    { name: 'Year', order: fieldsddl.dataSource[2].Order === 'Year_asc' ? 'Ascending' : 'Descending' },
                    { name: 'Order_Source', order: fieldsddl.dataSource[3].Order === 'Order Source_asc' ? 'Ascending' : 'Descending' }
                ];
            }
            else {
                pivotGridObj.dataSource.enableSorting = false;
                pivotGridObj.dataSource.sortSettings = [];
            }
        };
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample demonstrates ordering of fields either in ascending or descending order.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, any field can be selected from the
            <b>Fields</b> dropdown list and its order can be changed to display headers either in ascending or descending order.
            It can be enabled using the
            <code>enableSorting</code> property and it can be configured using the
            <code>name</code> and
            <code>order</code> options inside the
            <code>sortSettings</code> property in the pivotgrid widget.
        </p>
    </div>
}
