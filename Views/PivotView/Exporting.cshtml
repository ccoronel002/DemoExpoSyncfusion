@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView

@section ControlsSection{

    <div class="col-lg-8 control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("300").AllowExcelExport(true).AllowPdfExport(true).ShowFieldList(true).DataSource(dataSource => dataSource.Data((IEnumerable<object>
                )ViewBag.Data).ExpandAll(false).EnableSorting(true)
                .FormatSettings(formatsettings =>
                {
                    formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add();
                })
                .Rows(rows =>
                {
                    rows.Name("Country").Add();
                    rows.Name("Products").Add();
                })
                .Columns(columns =>
                {
                    columns.Name("Year").Add();
                    columns.Name("Order_Source").Caption("Order Source").Add();
                })
                .Values(values =>
                {
                    values.Name("In_Stock").Caption("In Stock").Add();
                    values.Name("Sold").Caption("Units Sold").Add();
                    values.Name("Amount").Caption("Sold Amount").Add();
                })
                .Filters(filters =>
                {
                    filters.Name("Product_Categories").Caption("Product Categories").Add();
                })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).Render()
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>
                            Export Type:
                        </div>
                    </td>
                    <td style="width: 60%;">
                        <div style="margin-left: -20px">
                            <select id="mode" name="ddl-view-mode">
                                <option value="excel">Excel</option>
                                <option value="csv">CSV</option>
                                <option value="pdf">PDF</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td></td>
                    <td>
                        <div style="float: right">
                            @Html.EJS().Button("export-btn").IconCss("e-icons e-play-icon").CssClass("e-flat").Content("Export").IsPrimary(true).Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .e-play-icon::before {
            content: '\e728';
        }
    </style>
    <script>
        var exportType = new ej.dropdowns.DropDownList({
            index: 0
        });
        exportType.appendTo('#mode');
        document.getElementById('export-btn').onclick = function () {
            var pivotGridObj = document.getElementById('pivotview').ej2_instances[0];
            var exportType = document.getElementById('mode').ej2_instances[0];
            if (exportType.value === 'excel') {
                pivotGridObj.excelExport();
            }
            else if (exportType.value === 'csv') {
                pivotGridObj.csvExport();
            }
            else {
                pivotGridObj.pdfExport();
            }
        };
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample demonstrates client-side exporting of the pivotgrid widget to Excel, CSV and PDF formats.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The pivotgrid widget supports client-side exporting and exports its data to the Excel, CSV and PDF formats data using
            the
            <code>excelExport</code>,
            <code>csvExport</code> and
            <code>pdfExport</code> methods.
        </p>
        <p>
            Choose the export document type in the dropdown list available inside the property panel and click the export button to export
            the widget to the selected document format.
        </p>
    </div>
}
