@using Syncfusion.EJ2
@using Syncfusion.EJ2.Popups

@section ControlsSection{
    <div id="target" class="col-lg-12 control-section">

        @Html.EJS().Button("dialogBtn").CssClass(".dlgbtn").Content("Open Dialog").Render()

        @Html.EJS().Dialog("defaultDialog").Visible(true).AnimationSettings(new DialogAnimationSettings() { Effect = DialogEffect.None }).Header("Drag Me!!!").Close("dialogClose").Open("dialogOpen").Content("<span>This is a dialog with draggable support.</span>").ShowCloseIcon(true).CloseOnEscape(false).Width("300px").Target("#target").AllowDragging(true).Render()

    </div>
}

<style>
    #control-container {
        padding: 0px !important;
    }

    #confirmDialog {
        height: 135px;
    }

    .e-btn-hide {
        display: none;
    }

    .dlgbtn {
        margin-right: 10px;
    }

    #container {
        height: 100%;
        min-height: 280px;
        position: relative;
    }

    @@media screen and (min-width: 150px) and (max-width: 480px) {
        .control-section {
            margin-bottom: 30px;
        }

        .control-wrapper {
            margin-bottom: 0px;
        }
    }
</style>

@section PreScripts {
    <script>
        document.getElementById('dialogBtn').onclick = function () {
            var dialogObj = document.getElementById('defaultDialog').ej2_instances[0];
            dialogObj.show();
        };
        function dialogClose() {
            document.getElementById('dialogBtn').style.display = 'block';
        }
        function dialogOpen() {
            document.getElementById('dialogBtn').style.display = 'none';
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the drag-and-drop operation of the dialog component.
            To begin drag-and-drop operation, select a dialog's header using mouse and dropping them in the desired location.
            The dialog can be draggable within the sample container.
            Enable the "open dialog" button to reopen the dialog if it is closed.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            A drag-and-drop operation is enabled using the <code>allowDragging</code> property. when you configure the <code>target</code> property,
            he dialog can be draggable within its target container alone.
            The drag-and-drop feature is used to reposition the dialog dynamically.
            The modeless dialog is only capable to drag-and-drop operation.
        </p>
    </div>
}