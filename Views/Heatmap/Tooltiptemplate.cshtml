@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div id="container" align="center">
            @Html.EJS().HeatMap("container").TitleSettings(ts => ts.Text("Crude Oil Production of Non-OPEC Countries (in Million barrels per day)").TextStyle(ViewBag.textStyle)).XAxis(
            xAxis =>
            {
                xAxis.LabelRotation(45)
                .LabelIntersectAction(Syncfusion.EJ2.HeatMap.LabelIntersectAction.None)
                .Labels(ViewBag.xLabels);
            }).YAxis(yaxis => yaxis.Labels(ViewBag.yLabels)).LegendSettings(ls =>
         ls.Visible(false)).PaletteSettings(ps => ps.Palette(palette =>
         {
             palette.Value(0).Color("#C2E7EC").Add();
             palette.Value(0.6).Color("#AEDFE6").Add();
             palette.Value(0.75).Color("#9AD7E0").Add();
             palette.Value(1).Color("#86CFDA").Add();
             palette.Value(1.5).Color("#72C7D4").Add();
             palette.Value(2).Color("#5EBFCE").Add();
             palette.Value(2.5).Color("#4AB7C8").Add();
             palette.Value(3).Color("#36AFC2").Add();
             palette.Value(3.5).Color("#309DAE").Add();
             palette.Value(5).Color("#2B8C9B").Add();
             palette.Value(5.5).Color("#257A87").Add();
             palette.Value(6).Color("#206974").Add();
             palette.Value(8).Color("#1B5761").Add();
             palette.Value(9).Color("#15464D").Add();
             palette.Value(9.5).Color("#000000").Add();
         })).CellSettings(cs =>
         cs.Border(ViewBag.border).Format("{value} M")).Load("load").TooltipRender("tooltipRender").DataSource(ViewBag.dataSource).Render()
        </div>
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
        };

        var tooltipRender = function (args) {
            args.content = ['In ' + args.yLabel + ', the ' + args.xLabel + ' produced ' + args.value + ' million barrels per day'];
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the crude oil production of the non-OPEC countries over the years. The data point values displayed are in million barrels per day units.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to customize the tooltip content in Heatmap. You can customize the tooltip content by using the <code>tooltipRender </code> event.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
    <p style="font-weight: 500">Injecting Module</p>
    <p>
        Heatmap component features are segregated into individual feature-wise modules. To use a tooltip, inject the <code>Tooltip </code> module using the <code>Heatmap.Inject(Tooltip) </code> method, and use a legend by injecting the <code>Legend </code> module using the <code>Heatmap.Inject(Legend) </code> method.
    </p>
}