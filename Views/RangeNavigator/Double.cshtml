@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <h4 id="days" align="center" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;">Score Comparision AUS vs SL</h4>
        <div id="container" align="center">
            @(Html.EJS().RangeNavigator("container").Height("120").LabelPosition(Syncfusion.EJ2.Charts.AxisPosition.Outside)
                .Tooltip(tl => tl.Enable(true))
                    .Series(sr =>
                {
                    sr.XName("x").YName("y").Width(2).Add();
                    sr.XName("x").YName("y").Width(2).Add();
                }).Changed("changed").Load("load").TooltipRender("renderTooltip").Render()
            )
        </div>
        <div id="chartcontainer" align="center">
            @(Html.EJS().Chart("chart")
            .Series(sr =>
            {
                sr.XName("x")
                   .YName("y")
                   .Name("AUS")
                   .Width(2).Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline).Animation(ViewBag.animation).Add();
                sr.XName("x")
                  .YName("y")
                  .Name("SL")
                  .Width(2).Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline).Animation(ViewBag.animation).Add();
            }).Annotations(an =>
           {
               an.Content("<div id='exchangeRate'></div>").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Pixel).X("85%").Y("15%").Region(Syncfusion.EJ2.Charts.Regions.Chart).Add();
           })
              .PrimaryXAxis(xaxis =>
                 xaxis.MajorGridLines(ViewBag.lineWidth).Title("Overs")
                      .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)

              )
              .ChartArea(ca => ca.Border(ViewBag.border))
              .PrimaryYAxis(yaxis =>
                  yaxis.Minimum(0).Title("Runs").MajorTickLines(ViewBag.lineWidth)
                        .LineStyle(ViewBag.lineWidth))
                        .LegendSettings(ls => ls.Visible(false))
                        .Height("350").Load("chartload").Loaded("chartloaded").Render()
            )


        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script src="~/Scripts/datasource.js"></script>
    <script>
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        var theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
        var backgroundColor = theme === 'Highcontrast' ? 'black' : 'white';
        var slData = sl;
        var ausData = aus;      
        var zoomFactor, zoomPosition;
        var load = function (args) {
            args.rangeNavigator.theme = theme;
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.series[0].dataSource = ausData;
            args.rangeNavigator.series[1].dataSource = slData;
            args.rangeNavigator.value = [31, 50];
        }
        var chartload = function (args) {
            args.chart.theme = theme;
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.series[0].dataSource = ausData;
            args.chart.series[1].dataSource = slData;
            getAnnotation(ausData, ej.charts.getSeriesColor(theme)[0]);
            getAnnotation(slData, ej.charts.getSeriesColor(theme)[1]);
        }
        var chartloaded = function (args) {
            var chart = document.getElementById('chart').ej2_instances[0];
            var series1 = args.chart.visibleSeries[0].interior;
            var series2 = args.chart.visibleSeries[1].interior;
            var html = '<table>';
            html += '<tr><td><div style="width:10px; height: 10px; border: 2px solid ' + series1 + '; background: ' + series1 + ';"></div></td><td style="padding-left:10px;">' + ' Australia' + '</td>';
            html += '<tr><td><div style="width:10px; height: 10px; border: 2px solid ' + series2 + '; background: ' + series2 + ';"></div></td><td style="padding-left:10px;">' + ' SriLanka' + '</td>';
            html += '</table>';
            chart.setAnnotationValue(0, '<div id="exchangeRate" style="line-height: 18px; font-size: 13px;background: #fff; opacity:0.9; color: #464e56; ' +
                ' box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px; border-radius: 3px">' +
                html +
                '</div>');
        }
        var changed = function (args) {
            zoomFactor = args.zoomFactor;
            zoomPosition = args.zoomPosition;
            if ((document.getElementById('chart').childNodes.length > 1)) {
                var chart = document.getElementById('chart').ej2_instances[0];
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.dataBind();
            }
        }
        function getAnnotation(args, color) {
            var chart = document.getElementById('chart').ej2_instances[0];
                for (var i = 0; i < args.length; i++) {
                    if (args[i]['isWicket']) {
                        chart.annotations.push({
                            content: '<div id= "wicket" style="width: 20px; height:20px; border-radius: 5px;' +
                            'background: ' + backgroundColor + '; border: 2px solid ' + color + '; color:' + color + '">W</div>',
                            x: args[i]['x'],
                            y: args[i]['y'],
                            coordinateUnits: 'Point'
                        });
                    }
                }
        }
        var renderTooltip = function (args) {
            args.text = [Math.round(args.text)];
            args.text = [(args.text).toString()];
        }

    </script>
}
@section ActionDescription{
    <p>
        This sample depicts the cricket match data between two countries with the help of numeric axis in range navigator.
    </p>
}
@section Description{
    <p>
        Numeric axis is used to plot numeric data in range navigator. To render numeric axis, set <code>valueType</code> to <code>Double</code>.
        Tooltip is enabled in this example, to see the tooltip in action, while the selected range is changed.
    </p>
}