@using Syncfusion.EJ2
@section ControlsSection{
<style>
        #container {
            width:100%;
            display: table;
            margin: 0 auto;
        }
</style>
    <div class="control-section">
        <div id="outer" style="width:100%">
            @Html.EJS().LinearGauge("container").Load("onGaugeLoad").Orientation(Syncfusion.EJ2.LinearGauge.Orientation.Horizontal).Axes(new List<Syncfusion.EJ2.LinearGauge.LinearGaugeAxis> {
       new Syncfusion.EJ2.LinearGauge.LinearGaugeAxis
       {
           Pointers = new List<Syncfusion.EJ2.LinearGauge.LinearGaugePointer>
           {
               new Syncfusion.EJ2.LinearGauge.LinearGaugePointer
               {
                   Value = 10, Height=15,Width=15,Placement = Syncfusion.EJ2.LinearGauge.Placement.Near,Color="#757575",
                   Offset =-50,MarkerType = Syncfusion.EJ2.LinearGauge.MarkerType.Triangle
               }
           },
           MajorTicks = new Syncfusion.EJ2.LinearGauge.LinearGaugeTick {  Interval=10, Height=20 },
           MinorTicks = new Syncfusion.EJ2.LinearGauge.LinearGaugeTick {  Interval = 2, Height=10 },
           LabelStyle = new Syncfusion.EJ2.LinearGauge.LinearGaugeLabel {  Offset = 48 },
       }
   }).Annotations(new List<Syncfusion.EJ2.LinearGauge.LinearGaugeAnnotation> {
       new Syncfusion.EJ2.LinearGauge.LinearGaugeAnnotation
       {
           Content = "<div id=pointer style=width:70px><h1 style=font-size:14px;>10 MPH</h1></div>",
           AxisIndex = 0, AxisValue = 10,X = 10, ZIndex = "1", Y = -70
       }
   }).Render();
        </div>
    </div>

    <script type="text/javascript">
        function onGaugeLoad(sender) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            sender.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            sender.gauge.orientation = "Horizontal";
            for (var i = 0; i < sender.gauge.annotations.length; i++) {
                sender.gauge.annotations[i].zIndex = "1";
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the default rendering of linear gauge.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the default linear gauge. The linear gauge control indicates the values of scales in horizontal
            or vertical sliding meter. You can use <code>axes</code>,
            <code>ranges</code>, <code>pointers</code> and <code>container</code> properties to customize the appearance of the
            gauge. an axis, annotation and a pointer has been used.
        </p>
        <br>
        <p>
            More information about linear gauge can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation">documentation section</a>.
        </p>
    </div>

}


