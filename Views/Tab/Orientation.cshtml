@using Syncfusion.EJ2

@{
    var template = "<div class='template-container'><div class='left'><img class='empImg' src='../Content/tab/${Id}.png' alt='${Id}' /></div><div class='left empl-info'><div class='name'>${Name}</div> <div class='role'>${Role}</div></div></div>";
}

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="e-sample-resize-container">
            <div id="rome" style="display: none">
                <div class="content-title">
                    <div class="cnt-text">Employee Info</div>
                </div>
                @Html.EJS().ListView("romeListView").Template(template).DataSource(ViewBag.romeData).Render()
            </div>
            <div id="paris" style="display: none">
                <div class="content-title">
                    <div class="cnt-text">Employee Info</div>
                </div>
                @Html.EJS().ListView("parisListView").Template(template).DataSource(ViewBag.parisData).Render()
            </div>
            <div id="london" style="display: none">
                <div class="content-title">
                    <div class="cnt-text">Employee Info</div>
                </div>
                @Html.EJS().ListView("londonListView").Template(template).DataSource(ViewBag.londonData).Render()
            </div>
            @Html.EJS().Tab("orientationTab").Height("320").ShowCloseButton(true).Created("tabCreated").Items(ViewBag.orientationItems).Render();
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td style="width: 50%;">
                        <div>Header Placement</div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("orientation").Width("90%").DataSource(ViewBag.orientationData).Value("Top").Change("changeHeaderPosition").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%;">
                        <div>Header Styles</div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("headerStyles").Width("90%").DataSource(ViewBag.styleData).Value("Default").Change("changeHeaderStyle").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

@section ActionDescription{
    <p>
        This sample demonstrates the <code>header</code> orientation of the <code>Tab</code>. Select option from drop-downs to switch header placement and changing the header style in properties panel.
    </p>
}

@section Description{
    <p>
        The <code>Tab</code> allows to place the header section inside the Tab component either at <code>top / bottom</code> position by using <code>headerPlacement</code> property.
    </p>
    <p>
        This sample illustrates the use of header placement and <code>showCloseButton</code> property.
        Users can change the header position by changing the drop-down value options and can close the Tab item by clicking close icon in header.<br /><br />

        The User can also view different header styles of Tab component by selecting options from `Header Styles` drop-down.
        Header styles changed by adding predefined classes in Tab root element and it class names listed below
        <br />
        <ul>
            <li>Material and Fabric theme differentiates all the available tab header styles such as <code>e-fill</code>, <code>e-background e-accent</code>.</li>
            <li>In bootstrap theme, all the styles such as <code>e-fill</code> & <code>e-background e-accent</code> will have the same look with no difference.</li>
        </ul>
        If above classes not included in root element default style will applied in Tab component.
    </p>
    <p>
        More information about Tab can be found in this <a target="_blank" href="http://ej2.syncfusion.com/aspnet/documentation/tab/getting-started-asp-mvc.html?syntax=mvc"> documentation </a> section.
    </p>
}

<style>
    .e-content .e-item {
        font-size: 12px;
        padding: 10px;
        text-align: justify;
    }

    .e-bigger .e-tab .e-list-item {
        border-bottom: 1px solid gainsboro;
    }

    .e-tab .e-list-item {
        height: 63px;
        border-bottom: 1px solid gainsboro;
    }

    .e-bigger .e-tab .e-list-item {
        height: 63px;
    }

    .e-tab .e-list-item:last-child {
        border-bottom: 1px solid gainsboro;
    }

    .template-container {
        height: 100%;
        padding-top: 7px;
    }

    .left {
        display: inline-block;
        vertical-align: top;
    }

    .empImg {
        height: 48px;
        width: 48px;
    }

    .name, .role {
        line-height: normal;
    }

    .name {
        font-weight: 500;
    }

    .role {
        color: grey;
        font-weight: 100;
    }

    .empl-info {
        padding: 7px 0 0 15px;
    }

    .content-title {
        height: 50px;
        display: table;
        margin: 0 auto;
    }

    .cnt-text {
        vertical-align: middle;
        display: table-cell;
        font-size: 18px;
        font-weight: 600;
    }

    .e-tab .e-listview .e-header {
        height: 50px;
    }

    .e-tab .e-listview .e-text {
        display: block;
        text-align: center;
    }

    .property-panel-content {
        padding: 10px;
    }
</style>

<script type="text/javascript">
    var tabObj;
    function tabCreated() {
        tabObj = document.getElementById('orientationTab').ej2_instances[0];
    }

    // Change event funtion for DropDownList component
    function changeHeaderPosition(e) {
        if (e.itemData != null && e.itemData === 'Bottom') {
            tabObj.headerPlacement = 'Bottom';
        } else {
            tabObj.headerPlacement = 'Top';
        }
        tabObj.dataBind();
    }

    // Change event funtion for DropDownList component
    function changeHeaderStyle(e) {
        removeStyleClass();
        let name = e.itemData;
        if (e.itemData != null && name === 'Fill') {
            tabObj.element.classList.add('e-fill');
        } else if (e.itemData != null && name === 'Accent') {
            tabObj.element.classList.add('e-background');
            tabObj.element.classList.add('e-accent');
        }
    }

    function removeStyleClass() {
        tabObj.element.classList.remove('e-fill');
        tabObj.element.classList.remove('e-background');
        tabObj.element.classList.remove('e-accent');
    }
</script>