@using Syncfusion.EJ2;
<script src="~/Scripts/financial-data.js"></script>
@{ 
    var dataT = new { Width = 0 };
    var margin = new { Left = 20 };
}
@section ControlsSection{
<div class="control-section">
    <div style="text-align:center">
        @Html.EJS().Chart("container-vertical").Rows(rows =>
   {
       rows.Height("40%").Add();
       rows.Height("60%").Add();
   }).Axes(ax =>
   {
       ax.Name("secondary").
       OpposedPosition(true).
       Minimum(-7000000000).
       Maximum(5000000000).
       Interval(6000000000).StripLines(ViewBag.xAxisStripLine).
       Title("Accumulation Distribution").MajorTickLines(ViewBag.majorTickLines).LineStyle(ViewBag.lineStyle).
       RowIndex(0).Add();
   }
           ).Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle).XName("x").YName("y").High("high").Low("low").Open("open").Close("close").Volume("volume").BearFillColor("#2ecd71").BullFillColor("#e74c3d").DataSource("dataSource").Name("Apple Inc").Width(2).Add();
           }).Indicators(id =>
           {
               id.Fill("#6063ff").KPeriod(2).DPeriod(3).YAxisName("secondary").Period(3).Type(Syncfusion.EJ2.Charts.TechnicalIndicators.AccumulationDistribution).Field(Syncfusion.EJ2.Charts.FinancialDataFields.Close).SeriesName("Apple Inc").Add();
           }).ZoomSettings(zn => zn.EnableSelectionZooming(true).Mode(Syncfusion.EJ2.Charts.ZoomMode.X)).Crosshair(cr => cr.LineType(Syncfusion.EJ2.Charts.LineType.Vertical).Enable(true)
           ).PrimaryXAxis(px => {
               px.ZoomFactor(0.2).MajorGridLines(dataT).ZoomPosition(0.6).MajorGridLines(ViewBag.majorGridLines).CrosshairTooltip(ViewBag.crosshairTooltip).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime);
           }).PrimaryYAxis(py => py.RowIndex(1).OpposedPosition(true).LineStyle(ViewBag.lineStyle).Title("Price").Minimum(80).Maximum(170).Interval(30).LabelFormat("${value}").PlotOffset(25)
             ).Margin(m => m.Left(20)).Title("AAPL 2012-2017").AxisLabelRender("axisLabelRender").ChartArea(area => area.Border(ViewBag.ChartBorder)).Tooltip(tl => tl.Enable(true).Shared(true)).LegendSettings(lg => lg.Visible(false)).Load("load").Render()
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }
</style>
    <script>
        var dataSource = window.chartData;
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";

        };
        var axisLabelRender = function (args) {
            if (args.axis.name === 'secondary') {
                var value = Number(args.text) / 1000000000;
                args.text = String(value) + 'bn';
            }

        };
    </script>
    }
@section ActionDescription{
    <p>
        This sample illustrates a stock chart with candle series and an accumulation distribution indicator. Trackball shows the information about the stock and signal value of a day.
   </p>
}
@section Description{
     <p>
        In this example, you can see how to render and configure the Accumulation Distribution Indicator.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information on the Accumulation Distribution Indicator can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}