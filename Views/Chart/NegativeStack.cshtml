@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
      @Html.EJS().Chart("container-vertical").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar).XName("x").YName("y").DataSource(ViewBag.dataSource).Marker(ViewBag.marker).Name("Female").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar).XName("x").YName("y").DataSource(ViewBag.dataSource1).Marker(ViewBag.marker).Name("Male").Add();

       }).PrimaryXAxis(px => px.Title("Height in Inches").Interval(1).MajorGridLines(ViewBag.majorGridLines).ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
       ).PrimaryYAxis(py => py.LabelFormat("{value} KG").EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorGridLines(ViewBag.majorGridLines).MajorTickLines(ViewBag.majorTickLines).LineStyle(ViewBag.lineStyle).LabelStyle(ViewBag.labelStyle)
       ).Title("Height vs Weight").ChartArea(area => area.Border(ViewBag.ChartBorder)).LegendSettings(lg => lg.Position(Syncfusion.EJ2.Charts.LegendPosition.Right)).Tooltip(tt => tt.Enable(true)).TooltipRender("tooltipRender").Load("load").Render()
 
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        };
        var tooltipRender = function (args) {
            args.text = args.text.indexOf('-') > 0 ? args.text.replace('-', '') : args.text;
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates stacked bar with negative data points. Data points values are showed by using data label.
    </p>
}
@section Description{
    <p>
    In this example, you can see how to render and configure the bar type charts. Similar to column charts, but the orientation of y axis is horizontal instead of vertical.
    You can use <code>border</code>, <code>fill</code> properties to customize the data appearance. <code>dataLabel</code> is used to represent individual data and its value.
    </p>
    <p>
      Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
     <br>
        <p>
            More information on the bar series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p> 
}