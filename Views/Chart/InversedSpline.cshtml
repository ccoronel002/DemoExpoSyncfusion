@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline)
            .Name("London")
            .XName("xValue")
            .YName("yValue")
            .Width(2)
            .Marker(ViewBag.marker)
            .DataSource(ViewBag.dataSource).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Spline)
           .Name("France")
           .XName("xValue")
           .YName("yValue1")
           .Width(2)
           .Marker(ViewBag.marker)
           .DataSource(ViewBag.dataSource).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
             .Interval(1)
             .LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90)
             .LineStyle(ViewBag.linestyle)
             .MinorTickLines(ViewBag.ticklines)

      )
      .PrimaryYAxis(yaxis =>
          yaxis.MajorGridLines(ViewBag.ticklines)
                .LabelFormat("{value}ËšC")
                 .Minimum(-5)
                 .Maximum(35)
                 .Interval(10)
      )
      .Title("Climate Graph - 2012")
      .Tooltip(tp => tp.Enable(true))
      .IsTransposed(true).ChartArea(area => area.Border(ViewBag.ChartBorder))
      .Load("load").Render()
)
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates a spline series by inversing X and Y Axis. 
        Data points are enhanced with marker and tooltip.
    </p>
}
@section Description{
     <p>
        In this example, you can see how to render and configure the spline type charts with inverted manner. Spline chart connects each point in series through a curved line.
        You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the spline. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
      <br>
        <p>
            More information on the spline series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p>
}