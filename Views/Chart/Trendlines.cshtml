@using Syncfusion.EJ2;
@section ControlsSection{   
<div>
    <div class="col-lg-9 control-section">
        <div>

             @Html.EJS().Chart("container").Series(series =>
             {
                 series.Trendlines(ViewBag.trendLines).Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(ViewBag.marker)
                .DataSource("series1").Name("Rupees").Width(2).Add();
             }).PrimaryXAxis(px => px.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorGridLines(ViewBag.majorGridLines)
             ).PrimaryYAxis(py => py.Title("Rupees against Dollars").Interval(10).MajorTickLines(ViewBag.majorTickLines).LineStyle(ViewBag.lineStyle)
             ).ChartArea(area => area.Border(ViewBag.ChartBorder)).Title("Historical Indian Rupee Rate (INR USD)").LegendSettings(lg => lg.Visible(false)).Tooltip(tt => tt.Enable(true)).Load("load").Render()
            </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            TrendLine Type:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("trendLineType").Index(0).DataSource(ViewBag.trendlineTypes).Value("Linear").Change("changeType").Render()
                           
                        </div>
                    </td>
                </tr>
                <tr id="" style="height: 50px">
                    <td style="width: 80%">
                        <div> Forward Forecast:</div>
                    </td>
                    <td style="width: 20%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("forwardForecast").Change("changeForward").Value(0).Max(20).Min(1).Width("120").Step(1).Render()
                           
                        </div>
                    </td>
                </tr>
                <tr id="" style="height: 50px">
                    <td style="width: 80%">
                        <div>Backward Forecast:</div>
                    </td>
                    <td style="width: 20%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("backwardForecast").Change("changeBackward").Value(0).Max(20).Min(1).Width("120").Step(1).Render()
                           
                        </div>
                    </td>
                </tr>
                <tr id="" style="height: 50px">
                    <td style="width: 80%">
                        <div>Polynomial Order:</div>
                    </td>
                    <td style="width: 20%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("polynomialOrder").Change("changeOrder").Enabled(false).Value(0).Max(20).Min(1).Width("120").Step(1).Render()
                           
                        </div>
                    </td>
                </tr>
                <tr id="" style="height: 50px">
                    <td style="width: 80%">
                        <div>Period:</div>
                    </td>
                    <td style="width: 20%;">
                        <div style="margin-top: 0px;">
                            @Html.EJS().NumericTextBox("period").Change("changePeriod").Enabled(false).Value(0).Max(20).Min(1).Width("120").Step(1).Render()
                           
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }

    #container_Series_0_TrendLine_0 {
        stroke-dasharray: 10px 10px;
        stroke-linejoin: round; stroke-linecap: round;
        -webkit-animation: dash 1s linear infinite;
        animation: dash 1s linear infinite;
    }

    @@-webkit-keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }

    @@keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }
</style>
    <script type="text/javascript">
       
        var series1 = [];
        var yValue = [7.66, 8.03, 8.41, 8.97, 8.77, 8.20, 8.16, 7.89, 8.68, 9.48, 10.11, 11.36, 12.34, 12.60, 12.95,
            13.91, 16.21, 17.50, 22.72, 28.14, 31.26, 31.39, 32.43, 35.52, 36.36,
            41.33, 43.12, 45.00, 47.23, 48.62, 46.60, 45.28, 44.01, 45.17, 41.20, 43.41, 48.32, 45.65, 46.61, 53.34, 58.53];
        var point1;
        var i;
        var j = 0;
        for (i = 1973; i <= 2013; i++) {
            point1 = { x: i, y: yValue[j] };
            series1.push(point1);
            j++;
        }
        var powerData = [
            { x: 1, y: 10 }, { x: 2, y: 50 }, { x: 3, y: 80 }, { x: 4, y: 110 },
            { x: 5, y: 180 }, { x: 6, y: 220 }, { x: 7, y: 300 }, { x: 8, y: 370 }, { x: 9, y: 490 }, { x: 10, y: 500 }
        ];
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
        };
           function changeForward(){
               var chart = document.getElementById("container").ej2_instances[0];
               var forward = document.getElementById("forwardForecast").ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.series[0].trendlines[0].forwardForecast = forward.value;
                chart.refresh();
            }
        function changeBackward() {
            var chart = document.getElementById("container").ej2_instances[0];
            var backward = document.getElementById("backwardForecast").ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.series[0].trendlines[0].backwardForecast = backward.value;
                chart.refresh();
            }
       function changeOrder() {
           var chart = document.getElementById("container").ej2_instances[0];
           var polynomial = document.getElementById("polynomialOrder").ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.series[0].trendlines[0].polynomialOrder = polynomial.value;
                chart.refresh();
            }
        function changePeriod() {
            var chart = document.getElementById("container").ej2_instances[0];
            var periodValue = document.getElementById("period").ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.series[0].trendlines[0].period = periodValue.value;
                chart.refresh();
            }
        function changeType() {
            var chart = document.getElementById("container").ej2_instances[0];
            var trend = document.getElementById("trendLineType").ej2_instances[0];
                chart.series[0].animation.enable = false;
                chart.series[0].dataSource = [];
                chart.series[0].trendlines[0].type = trend.value;
                chart.series[0].trendlines[0].name = trend.value;
                var forwardForecast;
                var backwardForecast;
                var polynomialOrder;
                var period;
                if (trend.value !== 'Power') {
                    chart.series[0].dataSource = series1;
                    chart.series[0].name = 'Rupees';
                    chart.primaryXAxis.title = '';
                    chart.primaryYAxis.interval = 10;
                    chart.primaryYAxis.title = 'Rupees against Dollars';
                    chart.title = 'Historical Indian Rupee Rate (INR USD)';
                    if (trend.value === 'MovingAverage') {
                        chart.series[0].trendlines[0].marker.visible = false;
                    }
                }
                else {
                    chart.series[0].dataSource = powerData;
                    chart.series[0].name = 'Meters';
                    chart.primaryXAxis.title = 'Seconds';
                    chart.primaryYAxis.title = 'Meters';
                    chart.primaryYAxis.interval = 100;
                    chart.title = 'Distance Measurement';
                }
                if (trend.value !== 'Polynomial' && trend.value !== 'MovingAverage') {
                    period = polynomialOrder = true;
                    forwardForecast = backwardForecast = false;
                }
                else if (trend.value === 'MovingAverage') {
                    period = false;
                    forwardForecast = backwardForecast = polynomialOrder = true;
                }
                else {
                    forwardForecast = backwardForecast = polynomialOrder = false;
                    period = true;
                }
                document.getElementById("forwardForecast").ej2_instances[0].enabled = !forwardForecast;
                document.getElementById("backwardForecast").ej2_instances[0].enabled = !backwardForecast;
                document.getElementById("polynomialOrder").ej2_instances[0].enabled = !polynomialOrder;
                document.getElementById("period").ej2_instances[0].enabled = !period;
                chart.refresh();
            }
       
    </script>
}
@section ActionDescription{
    <p>
    This sample visualizes the trend of Indian rupees and US dollar variation with trendline in the chart.
    The type of trend line can be changed by using <code>TrendLine Type</code>, forward and backward forecasting of trendlines can be changed by <code>Forward Forecasting</code> and <code>Backward Forecast</code> respectively.
    Polynomial and period for a trendlines can be changed by using <code>Polynomial order</code> and <code>Period</code>.
</p>
}
@section Description{
    <p>
    In this example, you can see how to render and configure the Trend Lines. You can use
    <code>border</code>,
    <code>fill</code> properties to customize the area.
</p>
<p>
    Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
</p>
<p>
    More information on the Trend Lines can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p>
}