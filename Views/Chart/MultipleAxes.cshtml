@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section">
    <div style="text-align:center">

        @Html.EJS().Chart("container").Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("x").YName("y").DataSource(ViewBag.dataSource).Name("Germany").Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).YAxisName("yAxis").XName("x").Marker(ViewBag.marker).YName("y1").DataSource(ViewBag.dataSource).Name("Japan").Add();

   }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(ViewBag.majorGridLines)
.Interval(1).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90).LineStyle(ViewBag.lineStyle)
       ).PrimaryYAxis(py => py.LabelFormat("{value}°F").Maximum(100).Minimum(0).Interval(20).LineStyle(ViewBag.lineStyle)
       ).Axes(ax =>
       {
           ax.OpposedPosition(true).RowIndex(0).Minimum(24).Maximum(36).Interval(2).Name("yAxis").LabelFormat("{value}°C").MajorTickLines(ViewBag.majorTickLines).MajorGridLines(ViewBag.majorGridLines).LineStyle(ViewBag.lineStyle).LabelStyle(ViewBag.labelStyle).Add();
       }
       ).Annotations(an =>
       {
           an.X("Sun").Y("35").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Point).VerticalAlignment(Syncfusion.EJ2.Charts.Position.Top).Content(ViewBag.content1).Add();
           an.X("Sat").Y("34").YAxisName("yAxis").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Point).VerticalAlignment(Syncfusion.EJ2.Charts.Position.Top).Content(ViewBag.content).Add();
       }
).Title("Weather Condition JPN vs DEU").ChartArea(area => area.Border(ViewBag.ChartBorder)).Tooltip(tt => tt.Enable(true)).LegendSettings(lg=>lg.Visible(false)).Load("load").Render()
    </div>
</div>

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
<div id='chart_cloud' style="display:none">
    <img src="@Url.Content("~/Content/chart/cloud.png")" style='width: 41px; height: 41px' />
</div>
<div id='chart_sunny' style="display:none">
    <img src="@Url.Content("~/Content/chart/sunny.png")" style='width: 41px; height: 41px' />
</div>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        }
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates multiple axis in chart to represent the temperature in Celsius in an axis and Fahrenheit  in another axis.
    </p>
}
@section Description{
        <p>
        In this example, you can see how to render and configure multipe axes. Use axes collection to render secondary axis to the chart and bind it to the specify series.
        You can also customize the axis line and its labels similar to primary axis.
        </p>
        <p> 
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>
         <p>
            More information on the multiple axis can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html">documentation section</a>.
        </p> 
}