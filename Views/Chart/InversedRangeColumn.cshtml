@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.RangeColumn)
            .Name("California")
            .XName("x")
            .High("high")
            .Low("low")
            .Width(2)
            .DataSource(ViewBag.dataSource).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.RangeColumn)
           .Name("Colorado")
           .XName("x")
           .High("high")
           .Low("low")
           .Width(2)
           .DataSource(ViewBag.dataSource1).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
               .MajorGridLines(ViewBag.gridlines)
      )
      .PrimaryYAxis(yaxis =>
          yaxis.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
                 .LineStyle(ViewBag.linestyle)
                 .MajorTickLines(ViewBag.ticklines)
                 .LabelFormat("{value}ËšF")
                 .Minimum(0)
                 .Maximum(100)
                 .Interval(20)
      )
      .Title("Temperature Variation")
      .Tooltip(tp => tp.Enable(true))
      .IsTransposed(true).ChartArea(area => area.Border(ViewBag.ChartBorder))
      .Load("load").Render()
)
        </div>
        <div style="float: right; margin-right: 10px;">
            Source:
            <a href="https://www.usclimatedata.com/climate/united-states/us" target="_blank">www.worldweatheronline.com</a>
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates a range column series by inversing its X and Y  Axes. Tooltip shows the information about the data points.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the range column type chart with inverted manner. You can use <code>border</code>,
        <code>fill</code> properties to customize the area. <code>dataLabel</code> are used to represent individual data
        and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information on the range column series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}