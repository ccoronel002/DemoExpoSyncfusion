@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
      @Html.EJS().Chart("container-verticals").Series(series =>
      {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Animation(ViewBag.animation).Width(2).Add();
      }).PrimaryXAxis(px => px.Title("Time (s)").MajorGridLines(ViewBag.majorGridLines)).PrimaryYAxis(py => py.Title("Velocity (m/s)").MajorGridLines(ViewBag.majorGridLines).LabelFormat("{value}M").Minimum(-15).Maximum(15).Interval(5)
    ).Title("Indonesia - Seismograph Analysis").IsTransposed(true).Load("load").Render()
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var series1 = [{ x: 0, y: 0 }];
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
            args.chart.series[0].dataSource = liveData(args.chart.series[0].dataSource, args.chart.series[0]);
        };
        var interval;
        
        
        
        function liveData(data, series) {          
            var newData = [];
            for (var count = 0; count < 350; count++) {
                if (count > 350 || document.getElementById('container-verticals') === null) {
                    clearInterval(interval);
                }
                else if (count > 300) {
                    newData.push({ x: count, y: getRandomArbitrary(0, 0) });
                }
                else if (count > 250) {
                    newData.push({ x: count, y: getRandomArbitrary(-2, 1) });
                }
                else if (count > 180) {
                    newData.push({ x: count, y: getRandomArbitrary(-3, 2) });
                }
                else if (count > 100) {
                    newData.push({ x: count, y: getRandomArbitrary(-7, 6) });
                }
                else if (count < 50) {
                    newData.push({ x: count, y: getRandomArbitrary(-3, 3) });
                }
                else {
                    newData.push({ x: count, y: getRandomArbitrary(-9, 9) });
                }
            }
            return newData;
        }
        function getRandomArbitrary(min, max) {
            return Math.random() * (max - min) + min;
        }
        function getXValue(data) {
            return data.length;
        }
    </script>
}
@section ActionDescription{
    <p>
    This sample illustrates the vertical chart by changing the orientation of x-axis to vertical and y-axis to horizontal.
</p>
}
@section Description{
    <p>
    In this example, you can see how to render and configure the vertical type charts.
    To render a chart in vertical manner, you can use <code>isTransposed</code> in chart.
</p>
<br>
<p>
    More information on the vertical can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p> 
}