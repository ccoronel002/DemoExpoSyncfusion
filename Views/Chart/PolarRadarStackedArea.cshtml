@using Syncfusion.EJ2;
@section ControlsSection{
<div>
    <div class="col-lg-9 control-section">
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar)
            .DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingArea)
            .Name("2013")
            .XName("x")
            .YName("y")
            .Width(2)
            .DataSource(ViewBag.dataSource).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar)
            .DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingArea)
            .Name("2014")
            .XName("x")
            .YName("y1")
            .Width(2)
            .DataSource(ViewBag.dataSource).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar)
            .DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingArea)
            .Name("2015")
            .XName("x")
            .YName("y2")
            .Width(2)
            .DataSource(ViewBag.dataSource).Add();
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Polar)
          .DrawType(Syncfusion.EJ2.Charts.ChartDrawType.StackingArea)
          .Name("2016")
          .XName("x")
          .YName("y3")
          .Width(2)
          .DataSource(ViewBag.dataSource).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
             .LabelPlacement(Syncfusion.EJ2.Charts.LabelPlacement.OnTicks)
             .Interval(1)
             .Coefficient(100)
      )
      .PrimaryYAxis(yaxis =>
          yaxis.LabelFormat("{value}M")
                 .Interval(5000)
                 .Minimum(20000)
                 .Maximum(0)
      )
      .Title("GDP, Current Prices (in Billions)")
      .Tooltip(tp => tp.Enable(true))
      .Load("load").Render()
)
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Series Type:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("dropdown").Index(0).DataSource(ViewBag.data).Value("Polar").Change("valueChange").Render()
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }
</style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));

        };
        var valueChange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var polarType = document.getElementById("dropdown").ej2_instances[0];
            chart.series[0].type = polarType.value;
            chart.series[1].type = polarType.value;
            chart.series[2].type = polarType.value;
            chart.series[3].type = polarType.value;
            chart.series[0].animation.enable = true;
            chart.series[1].animation.enable = true;
            chart.series[2].animation.enable = true;
            chart.series[3].animation.enable = true;
            chart.refresh();
        }
    </script>
}
@section ActionDescription{
    <p>
    This sample demonstrates polar series with stacking area type for GDP of different countries in recent years. The switching between polar and radar series can be done by using <code>Series Type</code> in property panel.
</p>
}
@section Description{
    <p>
    In this example, you can see how to render and configure the stacking area type charts. Stacks the series on top of another
    series to avoid the overlapping of series with one another, when rendering more than one area series in same chart.
    You can use <code>fill</code> properties to customize the stacked area. <code>dataLabel</code> is used to
    represent individual data and its value.
</p>
<p>
    More information on the polar series can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p>
}