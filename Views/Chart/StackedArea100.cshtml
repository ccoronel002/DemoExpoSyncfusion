@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">

            @Html.EJS().Chart("container-vertical").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100).XName("x").YName("y").DataSource(ViewBag.dataSource).Name("Organic").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100).XName("x").YName("y").DataSource(ViewBag.dataSource1).Name("Fair-trade").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100).XName("x").YName("y").DataSource(ViewBag.dataSource2).Name("Veg Alternatives").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100).XName("x").YName("y").DataSource(ViewBag.dataSource3).Name("Others").Add();

       }).PrimaryXAxis(px => px.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorGridLines(ViewBag.majorGridLines)
       .MajorTickLines(ViewBag.majorTickLines).LineStyle(ViewBag.lineStyle).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years).LabelFormat("y")
       ).PrimaryYAxis(py => py.LabelFormat("{value}B").Title("Spends").Interval(20).MajorTickLines(ViewBag.majorTickLines).LineStyle(ViewBag.lineStyle)
       ).Title("Trend in Sales of Ethical Produce").ChartArea(area => area.Border(ViewBag.ChartBorder)).Load("load").Render()
        </div>
        <div style="float: right; margin-right: 10px;">
            Source:
            <a href="https://www.gov.uk/" target="_blank">www.gov.uk</a>
        </div>
    </div>

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
}
@section ActionDescription{
    <p>
    Percentage of sales for four ethical products are visualized with default 100% stacked area series in chart.
    Legend in the sample shows the information about the series.
</p>
}
@section Description{
   <p>
    In this example, you can see how to render and configure the 100% stacking area type charts. You can use <code>fill</code> properties to customize the 100% stacking area.
</p>
<br>
<p>
    More information on the stacking area series can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p>
}