@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
      @Html.EJS().Chart("container").Series(series =>
 {
     series.SegmentAxis(Syncfusion.EJ2.Charts.Segment.Y).Name("Australia").Type(Syncfusion.EJ2.Charts.ChartSeriesType.MultiColoredLine).Width(1.5).XName("XValue").Segments(ViewBag.segment).YName("YValue").DataSource("dataValues").Width(2).Add();
 }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).MajorGridLines(ViewBag.majorGridLines).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelFormat("y")
       ).PrimaryYAxis(py => py.Maximum(800).Minimum(200).LineStyle(ViewBag.lineStyle).MajorTickLines(ViewBag.majorTickLines).MinorTickLines(ViewBag.minorTickLines).Interval(100).LabelFormat("{value}mm").RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
       ).Title("Annual Mean Rainfall for Australia").ChartArea(area => area.Border(ViewBag.ChartBorder)).Tooltip(tt => tt.Enable(true).Shared(true)).LegendSettings(lg => lg.Visible(false)).Annotations(an => { an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("90%").Y("12%").Content(ViewBag.content).Add(); }).Load("load").Render()
        </div>
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var dataValues = [];
        [
            380, 410, 310, 540, 510, 330, 490, 470, 472, 460, 550, 420, 380, 430, 385, 520, 580, 420, 350, 505,
            535, 410, 204, 400, 415, 408, 415, 350, 375, 500, 390, 450, 440, 350, 400, 365, 490, 400, 520, 510,
            395, 380, 404, 400, 500, 390, 610, 380, 390, 420, 440, 570, 600, 380, 410, 405, 480, 320, 420, 440,
            320, 280, 320, 400, 390, 460, 470, 490, 420, 480, 410, 420, 580, 410, 380, 480, 360, 650, 680, 720,
            580, 480, 520, 440, 420, 430, 380, 520, 410, 540, 400, 390, 460, 470, 490, 420, 480, 470, 490, 330,
            520, 480, 580, 590, 600, 310, 480, 500, 400, 508, 480, 460, 700, 705, 480, 410, 480,
        ].map(function (value, index) {
            dataValues.push({ XValue: new Date(1900 + index, 0, 1), YValue: value });
        });
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes the annual mean rainfall data with multi colored line series in the chart. 
        Data points are enhanced with segments and tooltip.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the points in a particular range by using <code>MultiColoredLine</code> series type. 
        Points under the range can be configured with <code>color</code>, <code>width</code>, and <code>dashArray</code>.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap a point in touch enabled devices.
    </p>
}