@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section" style="text-align:center">
    <div>
        @Html.EJS().Chart("container").Series(
       series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).
           Name("Product").
           XName("xValue").
           YName("yValue1").
           DataSource(ViewBag.dataSource).Add();
       }).PrimaryXAxis(
       xAxis =>
       {
           xAxis.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTimeCategory).
           IntervalType(Syncfusion.EJ2.Charts.IntervalType.Days).
           Skeleton("Ed").
           EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).
           Title("Business Days").
           MajorGridLines(ViewBag.line);
       }).PrimaryYAxis(
       yAxis =>
       {
           yAxis.RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).
            Minimum(0).
            Maximum(100).
            Interval(20).
            EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).
            LabelFormat("{value}M").
            LineStyle(ViewBag.line).
            MajorTickLines(ViewBag.line).
            MinorTickLines(ViewBag.line);
       }).ChartArea(area => area.Border(ViewBag.ChartBorder)).Title("Sales Comparison of a Product").LegendSettings(
       legend => { legend.Visible(false); }).Tooltip(
       tooltip =>
       {
           tooltip.Enable(true);
       }).Load("load").Render()       
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }
</style>
    <script>
        var data = [
              { x: new Date(2017, 11, 20), y: 21 },
              { x: new Date(2017, 11, 21), y: 24 },
              { x: new Date(2017, 11, 22), y: 24 },
              { x: new Date(2017, 11, 26), y: 70 },
              { x: new Date(2017, 11, 27), y: 75 },
              { x: new Date(2018, 0, 2), y: 82 },
              { x: new Date(2018, 0, 3), y: 53 },
              { x: new Date(2018, 0, 4), y: 54 },
              { x: new Date(2018, 0, 5), y: 53 },
              { x: new Date(2018, 0, 8), y: 45 }
        ];
        var striplines = [
            { visible: true, start: new Date(2017, 11, 20), end: new Date(2017, 11, 27), color: 'skyblue', opacity: 0.5, },
            { visible: true, start: new Date(2018, 0, 2), end: new Date(2018, 0, 8), color: 'pink', opacity: 0.5 },
        ];
        var load = function (args) {
            args.chart.series[0].dataSource = data;
            args.chart.series[0].xName = "x";
            args.chart.series[0].yName = "y";

            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
            args.chart.primaryXAxis.stripLines = [
                { visible: true, start: new Date(2017, 11, 20), end: new Date(2017, 11, 27), color: 'skyblue', opacity: 0.5, },
                { visible: true, start: new Date(2018, 0, 2), end: new Date(2018, 0, 8), color: 'pink', opacity: 0.5 },
            ];
            args.chart.annotations = [
            {
                x: new Date(2017, 11, 22), y: 90, coordinateUnits: 'Point',
                content: '<div style="color:#FF0000;font-family: bold; font-weight: 600">Christmas Offer<br> Dec 2017</div>',
            },
            {
                x: new Date(2018, 0, 4), y: 90, coordinateUnits: 'Point',
                content: '<div style="color:#FF0000;font-family: bold; font-weight: 800">New Year Offer<br> Jan 2018</div>',
            }
            ];

        };
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates sales of a product in business days. 
        Data points in this sample are enhanced with tooltip.
    </p>
}
@section Description{
    <p>
        In this sample, you can see how to render and configure the date time category axis. 
        Date time category axis is used to represent only business days in datetime axis.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap a point in touch enabled devices.
    </p>
    <br>
    <p style="font-weight: 500">Injecting Module</p>
    <p>
        Chart component features are segregated into individual feature-wise modules. For datetime category axis, you should inject
        <code>DateTimeCategory</code> module by using
        <code>Chart.Inject(DateTimeCategory)</code>method.
    </p>
    <p>
        More information on the datetime category axis can be found in this documentation section.
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html#valuetype-valuetype">documentation section</a>.
    </p>
}