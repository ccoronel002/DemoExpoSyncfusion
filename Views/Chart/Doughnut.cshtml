@using Syncfusion.EJ2;
@section ControlsSection{
   <div class="control-section">
       <div id="container" style="text-align:center">
        @(Html.EJS().AccumulationChart("container").Series(
series =>
{
    series.DataLabel(dl=>dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside).Font(ft => ft.FontWeight("600").Color("#ffffff"))).
         XName("xValue").
         YName("yValue").
         Name("Project").
         //Type(Syncfusion.EJ2.Charts.AccumulationType.Pie).
         Radius("70%").
         DataSource(ViewBag.dataSource).
         StartAngle(0).
         EndAngle(360).
         InnerRadius("40%").
         Explode(true).
         ExplodeOffset("10%").
         ExplodeIndex(3).Add();
}).EnableSmartLabels(true).Title("Project Cost Breakdown").LegendSettings(
legend =>
{
    legend.Visible(false);
}).Tooltip(tl => tl.Enable(true).Header("<b>${point.x}</b>").Format("Composition : <b>${point.y}%</b>")).Load("load").Render()
        )
    </div>
       </div>
    <script>
        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));

        };
    </script>
}
@section ActionDescription{
   <p>
    This sample visualizes the project cost breakdown statistics by using doughnut series. Datalabel shows the Information about the points.
</p>
}
@section Description{
  <p> In this example, you can see how to render and configure the pie chart. You can use <code>border</code>, <code>fill</code> properties to customize the pie point. <code>dataLabel</code> is used to represent individual data and its value.</p>
<p> <code>Tooltip</code> is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
}