@using Syncfusion.EJ2;
@section ControlsSection{
<script src="~/Scripts/theme-color.js"></script>
<div class="control-section">
    <div style="text-align:center">


 @Html.EJS().Chart("container").Series(series =>
   {

       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Bar).Marker(ViewBag.Marker).XName("x").YName("y").DataSource(ViewBag.dataSource).Name("December 2007").Width(2).Add();


   }).PrimaryYAxis(px => px.Minimum(0).Maximum(800).LabelStyle(ViewBag.Style).LineStyle(ViewBag.Line).MajorTickLines(ViewBag.Line).MajorGridLines(ViewBag.Line).LabelFormat("{value}M").EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
       ).PrimaryXAxis(px => px.Title("Country").ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(ViewBag.Line)
       ).Tooltip(tr => tr.Enable(true)).ChartArea(area => area.Border(ViewBag.ChartBorder)).Tooltip(tt => tt.Enable(true)).LegendSettings(lg => lg.Visible(false)).Title("Internet Users in Million â€“ 2016").Load("load").PointRender("labelRender").Render()

       
    </div>
    <div style="float: right; margin-right: 10px;">
        Source:
        <a href="http://www.internetworldstats.com/top20.htm" target="_blank">www.internetworldstats.com</a>
    </div>
</div>


<style>
    #control-container {
        padding: 0px !important;
    }
</style>
    <script>        
        var labelRender = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };

        var load = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        }
    </script>
    }
@section ActionDescription{
    <p>
        This sample demonstrates the rendering of category axis in the chart with internet users of different countries.
    </p>
}
@section Description{
    <p>
        Category axis is used to represent the categories in data. To render category axis, set <code>valueType</code> in
        axis to <code>Category</code>. Category label can placed between the ticks or on the ticks, based on <code>labelPlacement</code>        property.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
    <p>
        More information on the Category axis can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html#valuetype-valuetype">documentation section</a>.
    </p>
}