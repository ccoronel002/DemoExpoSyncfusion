@using Syncfusion.EJ2
@model EJ2MVCSampleBrowser.Controllers.TimePickerModel
@section ControlsSection{

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div class="col-lg-12 control-section">
            <div id="wrapper">
                @Html.EJS().TimePickerFor(model => model.Id, (Syncfusion.EJ2.Calendars.TimePicker)ViewData["time"]).Width("200px").Render()
                <div>
                    @Html.ValidationMessageFor(model => model.Id)
                </div>
                <div id="submitbutton">
                    @Html.EJS().Button("btn").Content("Post").Render()
                </div>
            </div>
        </div>

    }
    <style>
        #wrapper {
            max-width: 246px;
            margin: 30px auto;
            padding-top: 50px;
        }

        #submitbutton {
            margin-top: 20px;
            margin-left: 65px;
        }

        #control-content #wrapper .field-validation-error {
            color: red;
        }
    </style>
}
        }

@section ActionDescription{
    <div id="action-description">
        <p>
            Click the submit button to post the selected value in the TimePicker. When posting the null value, validation error message will be shown below the TimePicker.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the Strongly typed extension support in TimePicker. Value is set to the TimePicker from the code behind and its set to TimePicker in view page by invoking the strongly typed TimePickerFor helper with the lamba expression.
        </p>
        <p>
            More information on the DatePicker instantiation can be found in the
            <a href="http://ej2.syncfusion.com/documentation/datetimepicker/" target="_blank"> documentation section</a>.
        </p>
    </div>
}
