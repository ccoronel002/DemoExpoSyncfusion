@using Syncfusion.EJ2
@{
    ViewBag.Title = "ColumnTemplate";
}

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Grid("FlatGrid").DataSource((IEnumerable<object>)ViewBag.dataSource).Width("auto").Height("359").Columns(col =>
   {
       col.HeaderText("Employee Image").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Template("#template").Width("150").Add();
       col.Field("EmployeeID").HeaderText("Employee ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("FirstName").HeaderText("Name").Width("125").Add();
       col.Field("Title").HeaderText("Title").Width("170").Add();
       col.Field("HireDate").HeaderText("Hire Date").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Format("yMd").Add();
       col.Field("ReportsTo").HeaderText("ReportsTo").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();


   }).Render()
    </div>
<style>
    .image img {
        height: 55px;
        width: 55px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>

<script id="template" type="text/x-template">
    <div class="image">        
        <img src="@Url.Content("Content/images/Employees/${EmployeeID}.png")" alt="${EmployeeID}" />
    </div>
</script>
}
@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates usage of template columns in Grid. In this sample, we have shown custom images in the Employee
        Image column.
		</p>
	</div>
}

@section Description{
    <div id="description">
		<p>
        The Grid provides a way to use a custom layout for each cell using column template feature. The
        <code>Columns->Template</code> property accepts either string or HTML element`s ID value, which will be used as the template
        for the cell.
    </p>
    <p>
        In this demo, using column template, we have presented <strong>Employee Image</strong> column with Employee Photo
        and the <code>Columns->Template</code> is assigned with the ID of a SCRIPT element whose content is used as the template.
    </p>
    <p>The template expression should be provided inside <code>${...}</code> interpolation syntax.</p>
	
    </div>
}
