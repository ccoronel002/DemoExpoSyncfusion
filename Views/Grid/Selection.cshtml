
@using Syncfusion.EJ2

@section ControlsSection{
   <div class="col-lg-8 control-section">
    <div class="control-wrapper">
        <div class="control-section">
            @Html.EJS().Grid("Selection").DataSource((IEnumerable<object>)ViewBag.dataSource).AllowSelection().Columns(col =>
   {
       col.Field("EmployeeID").HeaderText("Employee ID").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("FirstName").HeaderText("Name").Width("125").Add();
       col.Field("Title").HeaderText("Title").Width("180").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("HireDate").HeaderText("Hire Date").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Format("yMd").Add();

   }).SelectionSettings(select=>select.Type(Syncfusion.EJ2.Grids.SelectionType.Multiple)).Render()
        </div>
    </div>
</div>
<div class="col-lg-4 property-section">

   <table id="property" title="Properties" style="width: 100%;">
        <tr>
            <td class="left-side">Selection Type</td>
            <td style="padding-bottom:10px">
                @Html.EJS().DropDownList("SelectionType").DataSource((IEnumerable<object>)ViewBag.type).Value("Multiple").Change("selectionChange").Render()
            </td>
        </tr>
        <tr>
            <td class="left-side">Selection Mode</td>
            <td>
                @Html.EJS().DropDownList("SelectionMode").DataSource((IEnumerable<object>)ViewBag.mode).Value("Row").Change("modeChange").Render()
            </td>
        </tr>
    </table>
</div>

<script>
    function modeChange(args) {

        var grid = document.getElementById("Selection").ej2_instances[0];
        grid.selectionSettings.mode = this.value;
    }

    function selectionChange(args) {
        var grid = document.getElementById("Selection").ej2_instances[0];
        grid.selectionSettings.type = this.value;
    }

</script>

}
@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the selection feature in Grid, which allows you to select row or cell through simple mouse down or keyboard interaction.
       You can change type and mode from the properties panel. </p>
	</div>
}

@section Description{
    <div id="description">
		<p>
			Selection provides an interactive support to highlight the row or cell that you select. 
			Selection can be done through a simple
			Mouse down or Keyboard interaction. To enable selection, set <code>
			AllowSelection</code> as true.
		</p>
		<p>Grid supports two types of selection which can be set using 
			<code>SelectionSettings->Type</code> property. They are,</p>
		<ul>
			<li><code>Single</code> - Enabled by default. Allows the user to select single row/cell at a time.</li>
			<li><code>Multiple</code> - Allows the user to select more than one row/cell at a time.</li>
		</ul>
		<p>Also, supports three modes of selection which can be set using 
			<code>SelectionSettings->Mode</code> property. They are,
		</p>
		<ul>
			<li><code>Row</code> - Enabled by default. Enables the row selection in Grid.</li>
			<li><code>Cell</code> - Enables the cell selection in Grid.</li>
			<li><code>Both</code> - Enables both the row and cell selection in Grid. 
			Clicking any cell will select the both row and cell simultaneously.
			</li>
		</ul>
		<p>To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells. 
		To select range of rows/cells, hold <strong>SHIFT</strong> key and click the rows/cells.</p>
		<p>While using the Grid in a touch device environment, there is an option for multi-selection 
			through a single tap on the row and it will show a popup with the multi-selection symbol. 
			Tap the icon to enable multi-selection in a single tap.
		</p>
		<p>In this demo, select the selection type and selection mode from the properties panel to do the selection.
		</p>
	</div>
}
