
@using Syncfusion.EJ2
@{
    ViewBag.Title = "DetailTemplate";
}

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Grid("DetailTemplate").DataSource((IEnumerable<object>)ViewBag.dataSource).DetailTemplate("#detailtemplate").Width("auto").Columns(col =>
   {      
       col.Field("EmployeeID").HeaderText("Employee ID").Width("110").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("FirstName").HeaderText("Name").Width("110").Add();
       col.Field("Title").HeaderText("Title").Width("150").Add();
       col.Field("Country").HeaderText("Country").Width("110").Add();
   }).Render()
        </div>

<style type="text/css" class="cssStyles">
    .detailtable td {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>
        <script type="text/x-template" id="detailtemplate">
    <table class="detailtable" width="100%" >
        <colgroup>
            <col width="35%"/>
            <col width="35%"/>
            <col width="30%"/>
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="4" style="text-align:center;">
                    <img class='photo' src="@Url.Content("Content/images/Employees/${EmployeeID}.png")" alt="${EmployeeID}" />
                </td>
                <td>
                    <span style="font-weight: 500;">First Name: </span> ${FirstName}
                </td>
                <td>
                    <span style="font-weight: 500;">Postal Code: </span> ${PostalCode}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Last Name: </span> ${LastName}
                </td>
                <td>
                    <span style="font-weight: 500;">City: </span> ${City}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Title: </span> ${Title}
                </td>
                <td>
                    <span style="font-weight: 500;">Phone: </span> ${HomePhone}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Address: </span> ${Address}
                </td>
                <td>
                     <span style="font-weight: 500;">HireDate: </span> ${HireDate.toLocaleDateString()}
                </td>
            </tr>
        </tbody>
    </table>
        </script>
        }
@section ActionDescription{
	<div id="action-description">
		 <p>This sample demonstrates the Grid component with the detail template feature. Click the expand button
			in each Grid row to show the detailed information about a row.
		</p>
	</div>
}

@section Description{
    <div id="description">
		     <p>
				The detail row template provides an additional information about a data row which can show or hide by clicking on expand
				or collapse button. The <code>DetailTemplate</code> property accepts either string or HTML element`s ID value, which will be used as the template
				for the detail row.
			</p>
			<p>
				In this demo, we have presented Employee Information with image in the detail row.
			</p>
			<p>The template expression should be provided inside <code>${...}</code> interpolation syntax.</p>
			<br/>
    </div>
}
