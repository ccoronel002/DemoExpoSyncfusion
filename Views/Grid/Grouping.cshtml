@using Syncfusion.EJ2
@{
    ViewBag.Title = "Grouping";
}

@section ControlsSection{
  <div class="control-section">
    @Html.EJS().Grid("FlatGrid").DataSource((IEnumerable<object>)ViewBag.dataSource).AllowSorting().Columns(col =>
{

    col.Field("Inventor").HeaderText("Inventor Name").Width("160").Add();
    col.Field("NumberofPatentFamilies").HeaderText("No of Patent Families").Width("195").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("Country").HeaderText("Country").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("Active").HeaderText("Active").Width("120").Add();
    col.Field("Mainfieldsofinvention").HeaderText("Main fields of invention").AllowGrouping(false).Width("200").Add();

}).AllowPaging().PageSettings(page => page.PageCount(5)).AllowGrouping().GroupSettings(group=>group.Columns(new string[] { "Country" })).Render()

</div>
}

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates grouping feature of the Grid component. In this sample, the Grid data is grouped against
			Country column. To group any other column simply drag the column header and drop on the group drop area.</p>
	</div>
}

@section Description{
    <div id="description">
        <p>
		The Grid control has options to group the records based on the required column. When grouping is applied, grouped records
        are organized into a hierarchical structure to facilitate easier expansion and collapse of records. To enable grouping,
        set <code>AllowGrouping</code> property as true.
		</p>
		<p>Columns can be grouped by simply dragging the column header and drop on the group drop area.</p>
		<p>In this demo, to group a specify column, drag and drop the column in the group drop area.</p>
    </div>
}
