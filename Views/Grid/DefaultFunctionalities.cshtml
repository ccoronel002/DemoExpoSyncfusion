@using Syncfusion.EJ2
@{
    ViewBag.Title = "Funcionalidades";
}

@section ControlsSection{
    <div class="control-section">
        @Html.EJS().Grid("DefaultFunctionalities").DataSource((IEnumerable<object>)ViewBag.dataSource).Columns(col=> {

       col.Field("OrderID").HeaderText("Order ID").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("120").Add();
       col.Field("CustomerID").HeaderText("Customer Name").Width("150").Add();
       col.Field("OrderDate").HeaderText("Order Date").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("130").Format("yMd").Add();
       col.Field("Freight").HeaderText("Freight").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("120").Format("C2").Add();
       col.Field("ShippedDate").HeaderText("Shipped Date").Width("140").Format("yMd").Add();
       col.Field("ShipCountry").HeaderText("Ship Country").Width("150").Add();

   }).AllowPaging().PageSettings(page=>page.PageCount(5)).Render()
        </div>
}

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the default rendering of the Grid with minimum configuration.</p>
	</div>
}

@section Description{
    <div id="description">
        <p>
			The Grid is used to display and manipulate tabular data with configuration options to control the way the data is presented
			and manipulated. It will pull the data from a data source, such as an IEnumerable, OData web services,
			or <code>DataManager</code> binding data fields to columns. Also, displaying a column header to identify the field with
			support for grouped records.
		</p>
		<p>
			In this demo, the Grid is populated with its minimum default settings.
		</p>
    </div>
}